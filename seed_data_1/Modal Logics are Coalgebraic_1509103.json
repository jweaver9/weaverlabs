{
    "acceptedDate": "",
    "authors": [
        {
            "name": "Cirstea, Corina"
        },
        {
            "name": "Kurz, Alexander"
        },
        {
            "name": "Pattinson, Dirk"
        },
        {
            "name": "Schr√∂der, Lutz"
        },
        {
            "name": "Venema, Yde"
        }
    ],
    "contributors": [],
    "createdDate": "2012-04-05T19:26:26+01:00",
    "dataProvider": {
        "id": 34,
        "name": "Southampton (e-Prints Soton)",
        "url": "https://api.core.ac.uk/v3/data-providers/34",
        "logo": "https://api.core.ac.uk/data-providers/34/logo"
    },
    "depositedDate": "",
    "documentType": "research",
    "doi": "",
    "downloadUrl": "",
    "fullText": "Modal Logics are CoalgebraicCorina C^ \u0010rsteaSchool of Electronics and Computer ScienceUniversity of Southamptoncc2@ecs.soton.ac.ukAlexander KurzDepartment of Computer ScienceUniversity of Leicesterkurz@mcs.le.ac.ukDirk Pattinson1Depart. of ComputingImperial College Londondirk@doc.ic.ac.ukLutz Schr oder2DFKI-Lab Bremen andUniversity of BremenLutz.Schroeder@dfki.deYde Venema3Institute for Logic, Language and ComputationUniversiteit van Amsterdamyde@science.uva.nlAbstractApplications of modal logics are abundant in computer science, and a large number ofstructurally di\u000berent modal logics have been successfully employed in a diverse spectrumof application contexts. Coalgebraic semantics, on the other hand, provides a uniform andencompassing view on the large variety of speci\fc logics used in particular domains. Thecoalgebraic approach is generic and compositional: tools and techniques simultaneouslyapply to a large class of application areas and can moreover be combined in a modular way.In particular, this facilitates a pick-and-choose approach to domain speci\fc formalisms,applicable across the entire scope of application areas, leading to generic software toolsthat are easier to design, to implement, and to maintain. This paper substantiates theauthors' \frm belief that the systematic exploitation of this coalgebraic nature will notonly have impact on the \feld of modal logic itself but also lead to signi\fcant progressin a number of areas within computer science, such as knowledge representation andconcurrency/mobility.Keywords: Modal Logic, Coalgebraic Semantics, Knowledge Representation, Mobility and ConcurrencyINTRODUCTIONLogics of all colours, shapes, and sizes have traditionally played a central role in computer science,and in fact the standard design of the modern computer itself is based on a particular brand of logic,Boolean propositional logic. In a rough classi\fcation along a tradeo\u000b between expressiveness on the onehand and computational tractability on the other hand, one \fnds simple logics such as propositionallogic, which despite being NP-complete can nowadays be e\u000eciently handled using modern SAT-solvers,at the one end, and highly expressive higher order logics which however typically o\u000ber only a low degreeof automation at the other end. In between, one has a broad spectrum of logics that aim at \fndingapplication-speci\fc sweet spots between the two conicting goals of expressiveness and tractability.One large class of such logics is the vast and growing family of modal logics, which are characterisedby having operators that qualify formulas as holding in a certain way, e.g. `necessarily', `in the future',`everywhere', `probably', `as everyone knows', or `normally'.Applications of modal logics and their more recent descendants, hybrid and description logics which tosome extent allow speaking about individuals, are abundant in computer science and related disciplines,and a multitude of di\u000berent formalisms have been studied in a variety of application contexts. Apartfrom classical applications in the \feld of concurrent [20], mobile [30], and probabilistic systems [28],modal logics play a central role in arti\fcial intelligence, e.g. in the context of reasoning with uncertainty[18], non-monotonic reasoning [16], and { in particular in their description logic incarnation { in the\feld of knowledge representation and ontologies [4]. Modal logics are employed to reason about games[32] and coalitional power in multi-agent systems [36]. In economics, they have been used to describe1Partially supported by EPSRC grant number EP/F031173/12Work by this author forms part of the DFG project Generic Algorithms and Complexity Bounds in Coalgebraic ModalLogic (SCHR 1118/5-1).3The research of this author has been made possible by VICI grant 639.073.501 of the Netherlands Organization forScienti\fc Research (NWO).Electronic Workshops in ComputingThe British Computer Society 1Modal Logics are Coalgebraicprobabilistic information of economic agents [19], whereas e.g. deontic logic, the logic of obligationand permission originally studied in philosophy [47], is being used to model contracts in multi-agentsystems. While we do not pretend to work speci\fcally on one of the UKCRC Grand Challenges, it isinteresting to note that every one of the current challenges involves modal logic in some form or other,variously referring e.g. to knowledge representation, logics of agents, or logics for concurrency.As an example in knowledge representation, imagine you want to connect two knowledge bases thatdescribe di\u000berent aspects of, say, transport patterns. The \frst knowledge base describes travel patternsin relation to individual activities. The second knowledge base delineates the volume of tra\u000ec onpublic and individual transport in temporal terms. Both knowledge bases will naturally use a plethoraof di\u000berent primitives to represent information. In a seemingly simple piece of knowledge such as`Normally, the likelihood of road congestion is smaller on weekends', one implicitly makes use of defaultlogics (`normally'), probabilistic reasoning (`the likelihood') and temporal knowledge (`weekends')under a quantitative regime (`smaller'). If we link this in with both knowledge bases that we seekto combine, we will moreover encounter spatial reasoning (to cater for distances), epistemic principles(knowledge of individuals), deontic constructs (obligations that arise e.g. through social norms) adornedwith constructs that formalise the joint behaviour of individual agents. Depending on the speci\fcs ofknowledge that we seek to combine, many more ways of logically expressing the relationship betweenthe entities under scrutiny may be needed.Central to the study of logics in general are a number of recurring questions, including completeness(`are all valid statements derivable?'), decidability (`is the logic amenable to automated reasoning?') andcomplexity (`what resources are required to mechanise the logic?'). Given the diversity of the modal logicfamily on the one hand and the uniformity of the problems arising in meta-theory and implementationon the other hand, it is clearly desirable to have a common framework that captures the syntax andsemantics of the mentioned modal logics and many others, existing or yet to be developed, in a uniformway and at the same time allows for a common meta-theory and generic mechanised reasoning tools.The unifying ingredient that makes all this possible is found in the semantics, however varied shapesthe latter assumes in speci\fc cases. It turns out that the common denominator is a view of models asdynamic or reactive systems in a very general sense, which is formally captured by regarding them ascoalgebras. We illustrate this view by a quick glance at a few examples.Kripke Frames. The traditional textbook semantics of the modal logic K and its extensions isusually presented in relational form: a Kripke frame is a pair (W;R) where W is a set of worldsand R \u0012 W \u0002 W is an accessibility relation. The interpretation of the accessibility relation variesaccording to the application domain { e.g. in concurrency, worlds are seen as states of a system, and Ras representing their potential temporal evolution, in knowledge representation, worlds are regarded asindividuals and R is a relationship between individuals such as parthood, and in epistemic reasoning, Rcaptures epistemic alternatives. In a Kripke frame, a world w satis\fes a modal formula of the form 2\u001e,read e.g. `necessarily \u001e' or `in all successor states, \u001e', if all worlds w0 accessible from w, e.g. all successorstates of w or all parts of w, satisfy \u001e. Now Kripke frames are easily seen to be in 1-1 correspondencewith transition maps \u001a : W ! P(W) that assign the set of successors fw0 2 W j wRw0g to each worldw, where P(W) is the powerset of W. From this point of view, if \u001e is a modal formula with extensionJ\u001eK \u0012 W, then a world w satis\fes 2\u001e (w j= 2\u001e) i\u000b the successor set of w is contained in J\u001eK. In otherwords,w j= 2\u001e () \u001a(w) 2 fB 2 P(W) j B \u0012 J\u001eKg:Probabilistic Transition Systems. One step up from Kripke frames, probabilistic transition systemsextend the notion of transition with quantitative uncertainty. In its simplest form [28, 19], probabilisticmodal logic (PML) extends propositional logic with operators Lp (`at least p') where p 2 [0;1] is arational number. PML is interpreted over probabilistic transition systems (W;P) where W is a set ofworlds and P = (Pw)w2W is a family of probability distributions on W, indexed by the set of worlds.Again, according to the application context P is variously interpreted as e.g. governing the evolutionof a black-box dynamic system or the beliefs of an agent. Correspondingly, the intended reading ofLp\u001e is `\u001e holds with probability at least p in the next state', or from the perspective of quantitativeElectronic Workshops in ComputingThe British Computer Society 2Modal Logics are Coalgebraicuncertainty `in his present state of belief, the agent assigns probability at least p to \u001e'. We mayview probabilistic transition systems as transition maps \u001a : W ! D(W), where D(W) denotes theset of discrete probability distributions on W; i.e. \u001a assigns to each world w a successor distribution\u001a(w) 2 D(W). The main di\u000berence with Kripke frames lies in the fact that collections of successorsare now structured: moving from frames to probabilistic models entails a shift from successor sets todistributions. The classical interpretation of probabilistic formulas, i.e.w j= Lp\u001e () Pw(J\u001eK) \u0015 pcan now be re-phrased in terms of successor distributions:w j= Lp\u001e () \u001a(w) 2 f\u0016 2 D(W) j \u0016(J\u001eK) \u0015 pg;i.e. a state w satis\fes Lp\u001e if its successor distribution assigns probability at least p to the event J\u001eK \u0012 W.Again, the quintessential nature of a probabilistic modal operator manifests itself as providing a passagefrom properties of states to properties of successor distributions.Conditional Logic. The language of conditional logic [7] extends propositional logic with a binaryconnective that we write ), using in\fx notation. The operator ) represents a non-monotonicconditional, whose intended readings include e.g. default implication `if \u001e then normally  ' and theconditional version `  holds under the condition \u001e'. The ensuing logics are often used in knowledgerepresentation to deal with the non-monotonic nature of information. Note that the operator ) is ingeneral distinct from material implication !. For example, the validity of \u001e )   does not imply thatof \u001e ^ \u001e0 )  . Thus, conditional logic is a modalised version of default logic, where defaults may benested. Conditional logic is usually interpreted in so-called (standard) conditional frames (or selectionfunction frames), that is, pairs (W;f) where W is a set of worlds and f : W \u0002 P(W) ! P(W) isa selection function that assigns a proposition f(w;A) \u0012 W to each world w and condition A \u0012 W.Alternatively, we may view conditional frames as transition maps \u001a : W ! (P(W) ! P(W)) thatmap each world w 2 W to a function \u001a(w) : P(W) ! P(W) from conditions to propositions, bothformalised as subsets of W. That is, successor structures of worlds are now (selection) functions of typeP(W) ! P(W).In a conditional frame (W;f), the standard semantics of the conditional operator takes the formw j= \u001e )   () f(w;J\u001eK) \u0012 J K:Again, the semantics of the conditional operator can be understood as specifying a property of successorstructures, i.e. selection functions: we havew j= \u001e )   () \u001a(w) 2 ff : P(W) ! P(W) j f(J\u001eK) \u0012 J K)gwhere J\u001eK and J K are again the truth-sets of \u001e and  , respectively. We note that, as in the otherexamples above, the semantics of the conditional operator is embodied by an operation, in this casebinary, that maps predicates on the set of worlds to predicates on the set of structured successors, in thiscase selection functions. Other examples include e.g. spatial transition systems where binary modalitiesare used to decompose concurrent processes.The pattern that becomes apparent in the above examples is that we may typically see the semantictransition structures over which modal logics are interpreted as maps of the type W ! T(W), whereT is some operator on sets, technically a functor, and to be thought of as a form of parametriseddatatype, which determines the branching type of the transitions; and moreover the interpretation ofmodal operators is embodied in terms of predicate liftings that transform predicates on the set W ofworlds into predicates on the set T(W) of successor structures. As a map W ! T(W) is just what istechnically termed a coalgebra for T, this is the starting point of coalgebraic modal logic: we can studymodal logics at the right level of generality by parametrising their semantics in the choice of a functorT and a suitable set of predicate liftings.Given that, as already illustrated by the above examples, the level of generality of the coalgebraicapproach is quite high indeed, one may wonder whether it is actually the right level of generality asElectronic Workshops in ComputingThe British Computer Society 3Modal Logics are Coalgebraicclaimed, i.e. whether one can indeed develop a powerful generic theory rather than just gather lots ofexamples under a common umbrella. It is one of the aims of this work to substantiate the claim thatthis is really the case by highlighting some of the achievements of coalgebraic modal logic to date.Indeed the scope of the established meta-theory of coalgebraic modal logic reaches surprisingly far.Besides basic meta-logical properties such as generic criteria for soundness and completeness [33], itincludes e.g. some now classical results of modal logic such as duality and ultra\flter extensions [25],but also computational aspects such as generic \fnite and shallow model constructions with ensuingdecidability and complexity results [39, 40] and decidability of generic \fxed-point logics [26], as wellas proof-theoretic results such as cut elimination and interpolation [34]. The coalgebraic framework isnot only parametric, but also modular w.r.t. combinations of logics [9, 41]. Moreover, the parametricityextends also to the underlying form of propositional logics and thus includes e.g. logics over nominalframeworks [5].Having thus emphasised the suitability of the coalgebraic approach as a universal framework for modallogic, we set out to develop our vision of a uni\fed description logic with universally applicable automaticreasoning support. In this ideal future, workers in knowledge representation, veri\fcation of concurrentsystems, and many other areas will put together the domain-speci\fc modal logic suited for their problemdomain in a pick-and-choose approach, and immediately obtain e\u000ecient and scalable reasoning toolsby instantiating the generic coalgebra-based reasoning environment.1. A COOK'S TOUR OF COALGEBRAIC LOGICSThe above examples support the claim that modal logics can be interpreted over general coalgebraicmodels. The idea that underlies the whole body of research into coalgebraic logics is parametricity:the methods and tools of coalgebraic modal logic apply to coalgebras of any type. In other words,the abstract theory speaks about T-coalgebras (C; : C ! TC) without ever assuming a concretede\fnition of T. Applications to concrete logics then simply fall out by instantiating the type functor Taccordingly. In this way, one obtains e.g. algorithms for reasoning with coalgebraic logics that uniformlycover all the previously given examples. A surprisingly large body of results can be obtained at thishigh level of generality, indicating that coalgebras relate to modal logic at precisely the right level ofgenerality. We illustrate this by the following overview of the main results, tools and techniques in the\feld of coalgebraic logics.1.1. Compositionality of Coalgebraic LogicsAs illustrated above, the coalgebraic paradigm is a very exible means of describing dynamic behaviour.E.g. we have seen that probabilistic transition systems can be described as coalgebras of type C ! D(C)where D(C) is the set of (\fnitely supported) probability distributions over C. Similarly, game frames [36]can be phrased coalgebraically: a game frame amounts to a coalgebra of type C ! G(C) forG(C) = f(S1;:::;Sn;f) j Si 6= ;;i = 1;:::;n;f : S1 \u0002 \u0001\u0001\u0001 \u0002 Sn ! Cgwhere informally the Si are sets of strategies of the individual agents 1;:::;n and f is an outcomefunction that produces a new position on the game board given the choice of individual strategies.Games with uncertainty can now be modelled by a simple combination: rather than a new position asin the game with certainty, the outcome of a choice of strategies is now an uncertain new position,i.e. a probability distribution over positions on the game board. That is to say, a model for gameswith uncertainty is a coalgebra of type C ! D(G(C)) { a position on the game board and choice ofstrategies yields a distribution over successor states. In a similar way, simple Segala systems (calledprobabilistic transition systems in [24]) can be modelled as coalgebras of typeC ! (P(DC))Awhere (\u0000)A represents function space: to every state c 2 C and every label a 2 A, one associatesthe non-deterministic choice of a probability distribution over successor states that accounts for aprobabilistic interaction with the environment. Similar combinations abound in many areas of computing:in the area of knowledge representation, one may for instance consider combinations of non-monotonicconditionals and quantitative uncertainty, and logics for mobile systems are most conveniently addressedusing logical primitives for communication and the generation of new channels at run time.Electronic Workshops in ComputingThe British Computer Society 4Modal Logics are CoalgebraicThe power of the coalgebraic approach comes into play by associating a logical description to everycomponent that can be composed to obtain a description of combined systems in the spirit of Abramsky'sDomain Theory in Logical Form [2]. In more detail, we have for every type functor T on sets:\u000f a one-step syntax, consisting of a set of modal operators with arities that are used to describepossible next-state behaviours;\u000f a one-step semantics for each such modal operator, in the shape of a choice of predicate liftingsas explained in the introduction; and\u000f a set of one-step rules axiomatising the one-step observable behaviours of states of T-coalgebras.The great advantage of the above approach is its compositionality, which allows deriving compositemodal logics in parallel with the structure of composite type functors such as P(D(\u0000))A above:it su\u000eces to identify a number of `basic' logical features, such as non-determinism, strategies, orprobability, and a number of ways of combining such features (these two ingredients can even be seen asinstances of the same concept [41]), and equip these constructions with the above-mentioned semanticand proof-theoretic structure. One thus obtains multi-sorted modal logics that mix the involved modaloperators under a typing discipline which reects the structure of the underlying systems, such as theprobabilistic modal logic for Segala systems advocated in [24] that distinguishes probabilistic and non-deterministic formulas. This compositional structure allows properties such as soundness, completeness,expressiveness (w.r.t. characterising bisimilarity [9] or parametrised notions of similarity [8]), anddecidability, as well as upper complexity bounds (Sect. 1.4), to be derived in a modular fashion byshowing that the basic building blocks satisfy certain conditions at the one-step level such as one-stepcompleteness or one-step expressiveness [9, 41]. Instantiated e.g. with the probabilistic modal logic ofSegala systems [24], the coalgebraic approach provides in particular\u000f a modularised proof of the expressiveness of this logic w.r.t. the standard notion of bisimulation,\u000f a modular way of deriving a sound and complete proof system, and\u000f a modular satis\fability algorithm that witnesses a PSPACE upper bound.While the \frst item is just an alternative proof of a known result in probabilistic process algebra, thelatter two have, to our knowledge, \frst been stated and proved in a coalgebraic setting [9, 41]. So far,only a limited amount of interaction between the di\u000berent components can be accounted for [35] butmore general results are anticipated.1.2. Logics for Nominal CalculiIn the previous section, we have argued that the coalgebraic approach is parametric and compositionalin the notion of behaviour, which is conveniently abstracted into a type functor. But what constitutesthe semantical base whose properties we are to observe? It turns out that there is a plethora of di\u000berentsemantical structures which form the underlying basis over which we analyze behaviour.This is reected in the di\u000berent ways of building logics and models. For example, on the logical side, thevariation starts already at the level of the underlying propositional logic (classical, intuitionistic, positive,substructural, etc.). Semantically, we may start with basic entities that we call states and then addstructure, beyond the coalgebraic transition structure, in many di\u000berent ways, e.g. algebraic operations(reecting the way process calculi allow us to construct new states from given ones), topologicalstructure (capturing that not all but only `open' sets of states are observable) and, most importantly,recursion. Like in the `plain' coalgebraic setting, we wish to \fnd a systematic and modular way of linkinglogics to structured models.The semantics of the logics we want to use as the basic building blocks are best described via Stoneduality [23] and its relatives. The idea is to describe a logic (syntax and proof system) as a category ofalgebras (such as Boolean algebras, Heyting algebras, distributive lattices) and the models as topologicalspaces (the topology corresponds to the fact that e.g. \fnitary Boolean logic is not strong enough toreason about arbitrary in\fnite unions and intersections). Duality then amounts to a (dual) equivalencebetween a category of algebras and a category of topological spaces (such as Boolean algebras andStone spaces). The two layers, duality and modular combination, can be brought together in a fruitfulElectronic Workshops in ComputingThe British Computer Society 5Modal Logics are Coalgebraicway to account for the computational structure over which observations are made. A famous example,and indeed ancestor of this approach, is Abramsky's programme of Domain Theory in Logical Form,which extends Stone dualities to the solution of recursive domain equations [2, 3].We now proceed to illustrate how coalgebraic techniques and a suitable choice of base category canbe combined to derive in a systematic way a logic for the \u0019-calculus [29] which characterises stronglate bisimilarity and accounts for name binding; see [5] for a full treatment. This showcases yet anotherorthogonal aspect of genericity in the coalgebraic framework. To capture the semantics of the \u0019-calculus,we need to interpret processes not in a set-theoretic universe (as before) but over named sets, or moreformally the presheaf category N of functors from \fnite sets (representing communication channels) tospectral spaces (representing observable behaviour in the presence of recursion). As with the coalgebraicapproach in general, the type of possible one-step behaviours of processes is captured by a type functor,but now taking nominal sets as the semantic base. For the \u0019-calculus, the following functor on N wasintroduced independently in [15] and [45]:Pi(X) = P( X + N \u0002 XN + N \u0002 (N \u0002 X) + N \u0002 \u000eX ): (1)As before P is for non-determinism, + is binary choice; N is a constant for the set of names, \u000e allowscreating a fresh name, and (\u0001)N inputs a (possibly fresh) name. We read Pi as follows. The possibleone-step behaviours of a process are non-deterministic (due to P) and may be one of the followingalternatives: A silent step (the X component), an input of a name (XN) over a channel (N), theoutput of a free name over a channel (due to N \u0002 N \u0002 X) or the allocation and sending of a freshname (the N \u0002 \u000e(X)-part).In the same way in that modularity was invoked to obtain sound, complete and fully abstract logics forset-based models, the same machinery also applies uniformly in this di\u000berent, more complex setting:One has to describe the logical structure of the semantical base category, in this case N, and a logicaldescription of the functor Pi. This is not hard: The case of the basic functors P;+;\u0002 has been treatedin Abramsky [2, 1] and the axiomatisations can be reused without further modi\fcation (providing e.g.the usual modalities 2 and 3); allocation of new names gives rise to a modal operator [\u0017b] for namerevealing. The results is a new, fully abstract, sound and complete modal logic for the \u0019-calculus. Again,the power lies in the modularity: the same techniques give rise to out-of-the-box logics both for othercalculi and other forms of equivalences, in particular including ones yet to be developed.1.3. Automata and Fixpoint LogicsIn this section we provide another example of the unifying power of the coalgebraic perspective, nowin a classical area of computer science: automata theory. More speci\fcally, we consider the theory of\fnite automata as devices for classifying in\fnite, or possibly in\fnite, objects. This branch of theoreticalcomputer science has found important applications in areas of computer science where one investigatesthe ongoing and temporal behavior of nonterminating programs such as operating systems. As anexample we mention the automata-based veri\fcation method of model checking [11] and reasoningwith \fxpoint logics [17] for example in the context of common knowledge or temporal logics.This research also has a long and strong theoretical tradition, in which an extensive body of knowledgehas been developed, with a number of landmark results. Many of these link the \feld to neighboringareas such as logic and game theory, see [17] for an overview. The outstanding example here is of courseRabin's decidability theorem [37] for the monadic second order logic of trees; to mention a more recentresult, Janin & Walukiewicz [22] identi\fed the modal \u0016-calculus as the bisimulation invariant fragmentof the monadic second order logic of labelled transition systems.The automata that we refer to come in many kinds and shapes, and can be classi\fed according to anumber of criteria, including1. the kind of objects the automata operate on: words, trees, transition systems, ...2. the degree of interaction encoded in the automaton transition map: is it deterministic,nondeterministic, or alternating?3. the acceptance condition of the automaton: using a B uchi, Muller or parity condition?Electronic Workshops in ComputingThe British Computer Society 6Modal Logics are CoalgebraicNote that the objects that automata operate on very often are coalgebras, so it should come as nosurprise that coalgebraic notions will play a role here. Interestingly, many of the key results in automatatheory involve a comparison of automata that fall in di\u000berent classes according to the second and thirdcriterion above, but apply separately to each class of automata as given by the \frst criterion. Thisapplies for instance to various closure properties of the class of recognizable languages, and to thefact that alternating parity automata can be transformed into equivalent nondeterministic ones: theseresults hold for word, tree, and graph automata alike. We claim that it will increase our understandingof automata theory if we see these results as manifestations of a more general, `universal' automatatheory which is essentially coalgebraic in nature.The key idea underlying the coalgebraic perspective on automata theory is that acceptance (of anobject by an automaton) generalizes bisimilarity (of two objects). This notion can be nicely capturedby an in\fnite bisimilarity game of two players that we call 9 (\u0013 Eloise) and 8 (Ab\u0013 elard). In order to bringautomata into the picture, we think of one structure, a coalgebra of type A = (A;\u000b : A ! TA), fromnow on called the automaton, as classifying the other structure, a coalgebra S = (S;\u001b : S ! TS) ofthe same type, from now on called the coalgebra. This conceptual breach of the symmetry between thetwo structures allows us to make some modi\fcations to the structure of the automaton.Most importantly, we give 9 a bigger role in the game by replacing the transition map \u000b : A ! TA witha nondeterministic variant \u0001 : A ! P(TA). The game is modi\fed accordingly: Instead of \fxing thecoalgebraic reading of a state a 2 A as the element \u000b(a) 2 TA, we allow 9 to dynamically pick sucha reading from the set \u0001(a) \u0012 TA, whenever the state a pops up during the match. Space limitationsprevent us from discussing the other two modi\fcations (requiring automata to be \fnite, and adding anacceptance condition enabling 8 to win some in\fnite matches as well) in any detail.The key point is that we have turned the bisimilarity game into an acceptance game, and that whenwe take the coalgebra S to be a binary tree, then this acceptance game is exactly the standard one thatwe know from classical automata theory.The coalgebraic perspective on automata theory that we just described, applies to set coalgebras ofarbitrary type T [46]. In addition, in order to specify and reason about ongoing coalgebraic behavior,one may extend the coalgebraic logics mentioned in the earlier parts of this note, with \fxpoint operators,obtaining coalgebraic generalizations of the modal \u0016-calculus [22]. Perhaps of more signi\fcance, undersome mild condition on the functor T (namely, that it preserves so-called weak pullbacks), most ofthe important results in the theory of tree and graph automata, can in fact be proved at this level ofgenerality [27]. As examples we mention the following results:\u000f reduction of alternating to nondeterministic automata\u000f various closure properties of recognizable languages\u000f decidability and \fnite model property of an associated coalgebraic \fxpoint logic.It should be noted that all the above constructions are naturally of a modular nature [10] and so trulyfaithful to the coalgebraic paradigm.1.4. Generic Algorithms and Reasoners for Modal LogicsGiven the extremely broad scope of coalgebraic modal logic, one of the most important aspects of itsemerging meta-theory is that it allows for a generic algorithmic treatment, including both the proof oftight generic complexity bounds and actual implementations. The corresponding theoretical results takethe shape of well-de\fned and easily veri\fed criteria that a logic must satisfy in order to have a decidablesatis\fability problem or even to be of low computational complexity. Technically, these criteria reduceproperties of the logic to much simpler properties of the underlying coalgebraic structure as given bythe choice of a functor and associated predicate liftings; generic complexity bounds are then witnessedby generic algorithms that are parametrised by subroutines dealing with logic-speci\fc aspects of localsatis\fability.Early results of this type have been limited to so-called rank-1 logics, characterised semantically asimposing only local restrictions (such as seriality) rather than global restrictions (e.g. transitivity)Electronic Workshops in ComputingThe British Computer Society 7Modal Logics are Coalgebraicon the underlying models. Advances into the generic study of logics outside rank 1 are being madecurrently [35, 43]. The \frst widely applicable criterion [39] made use of a \fltration-based \fnite modelconstruction to obtain a generic decidability criterion and ensuing EXPTIME or NEXPTIME upperbounds, establishing a \fnite model property for coalgebraic logics along the way. A strongly improvedversion of this result [43] applies to various logics outside rank 1, and in particular has led to thedesign of a description logic with quali\fed number restrictions that is able to handle parthood acrossseveral layers of decomposition while keeping decidability, even in NEXPTIME; this contrasts sharplywith existing approaches using transitive parthood, which lead quickly into undecidability [21].Within the realm of rank-1 logics, the generic exponential time bounds of [39] generally do not matchthe actual complexity of individual logics, which is typically PSPACE. It does however turn out thatthese bounds can be matched by generic algorithms, and indeed the latter have been used to determinethe exact complexity of individual logics where this was previously unknown. The generic algorithmsavailable can be broadly grouped into two classes: syntactically-oriented algorithms that connect proofsearch with shallow models, and semantically-minded algorithms that attempt to construct shallowmodels directly. An algorithm of the former type, based on the central notion of resolution closedrule sets [40], captures the known tight PSPACE upper bounds for such diverse logics as K (or KD),coalition logic, graded modal logic, and probabilistic modal logic, and moreover has led (simultaneouslywith [12]) to a new PSPACE upper bound for majority logic [31]. This algorithm, in modularised form, isimplemented in the prototypic Coalgebraic Logic Satis\fability Solver CoLoSS [6]. Alternative semantics-based algorithms [44] cover e.g. complex logics such as Presburger modal logic [12] and the modal logicof probability [14], and have been used to establish new PSPACE upper bounds e.g. for Elgesem's logicof agency [13]. Not only does this already cover an impressive collection of modal logics. What is moreis that { faithful to the coalgebraic paradigm { the reasoning principles for individual logics can becombined and induce reasoners for composite logics [41]. Ongoing externally funded research projectsare aimed at extending the generic algorithmic framework, in particular to more general logics including\fxpoints. One important goal are optimised implementations of the generic algorithms to pave the wayfor e\u000ecient and universal reasoners based on the coalgebraic paradigm.2. VISIONSWe believe that, in the medium term, coalgebraic logics will make a di\u000berence in many areas, mainlybecause of their huge exibility and compositional nature. One of the areas is modal logic itself, but thepotential is far greater. We outline some visions in the areas of knowledge representation and reasoningabout concurrent and mobile systems.2.1. The Future of Modal LogicImagine you are exploring a newly designed or discovered modal logic. The questions on the agendacould be computational (is the logic decidable? how di\u000ecult is the decision problem?), of a modellingcharacter (what is the natural semantic domain for the logic? is it complete? is it expressive?) or possiblypertaining to its meta-theory (does it have the interpolation property? is it canonical?).The standard approach to questions of the above type is to set up a semantics for the logic underscrutiny and to try and adapt known constructions from other settings to the new semantic domainin order to shed light on the properties of interest { a laborious process that leads to results that arespeci\fc to the logic under consideration.Or, why not simply consult the rich and expanding literature on coalgebraic semantics and instantiateo\u000b-the-shelf results to obtain the properties in question? And even in case ready-made results do not\ft (yet), investigating your logic in the generic and abstract coalgebraic framework has bene\fts thatgo far beyond the concrete logic at hand and will later help those who ask similar questions about theirown favourite logics.In summary, we expect that the future of modal logics is coalgebraic. Judging from the rapid growth ofthe body of literature in coalgebraic logics, and the already impressive number of logics that fall withinElectronic Workshops in ComputingThe British Computer Society 8Modal Logics are Coalgebraicthe coalgebraic paradigm, coalgebras will be the standard semantics of modal logics in years to come.We believe that the coalgebraic view brings about a number of signi\fcant advantages:Genericity. Both theoretical results and practical tools based on the coalgebraic framework are byconstruction applicable to a large class of modal logics.Compositionality. Di\u000berent logics can naturally co-exist in the coalgebraic framework which allows fora natural and seamless integration of reasoning principles.Adaptability. Application areas are dynamic rather than static, and the generic and compositionalapproach of coalgebraic logics allows for an easy integration of new requirements in particularapplication domains. Coalgebraic modal logic caters for both semantics-centered approaches,where one needs to design a logic to describe given semantic phenomena, and syntax-centeredones [42], where one needs semantic underpinnings for the analysis of given means of expression.As new and domain speci\fc modal logics emerge steadily, for example in the \felds of knowledgerepresentation and concurrency/mobility as outlined below, the time is ripe for a more uni\fed approachthat will largely eliminate the need for tinkering with the particulars of speci\fcally given logics. Whatwe see before us in the medium term is a unitised coalgebraic foundation that covers not only thelogics of today, but also all those logics that will be developed tomorrow to harness the ever increasingcomplexity of the modern digital society.2.2. Coalgebraic Logics in AI and Knowledge RepresentationRecall the example from the introduction involving transport patterns. We have seen that the expressivemeans potentially required in tra\u000ec-related formal knowledge bases can be cast as instances ofcoalgebraic modal logic. What next? Of course we would like to reason about the information thatis represented by the amalgamation of both knowledge bases. This involves modularity: we need tocombine reasoning principles (to capture the interaction between di\u000berent logical constructs), we needto combine knowledge and data, and we need to synthesise algorithms that allow to derive validconclusions from the amalgamated knowledge base automatically.But reasoning may not be enough. We might want to employ mechanisms of knowledge discovery, e.g.with the aim of supporting transport planning or to provide decision support for network managers.This leads us into the area of machine learning, and we would like to employ mechanisms for knowledgediscovery in this speci\fc setting.Of course, reasoning about transport patterns is only one example, and we are faced with similar tasks,most prominently in the area of medicine (with a comparatively large body of knowledge formalised e.g.in the GALEN ontology [38]), but also in other areas like civil engineering, law, and life sciences. Thediversity of the form of knowledge to be formalised, which stems from the di\u000berent application areas,calls for modular and compositional systems that allow representing and reasoning about combinationsof many di\u000berent facets of knowledge { and if we were granted a wish, they should moreover allow forinduction of hypotheses.Can such systems be achieved? We think that coalgebraic techniques will have both a natural and acentral place in the \feld of knowledge representation in the years to come. The pick-and-choose approachto modal, hybrid, and description logics allows us to combine logical features and reasoning principles in amodular fashion. The modularity goes beyond the blueprint stage as coalgebraic techniques also facilitatethe automated construction of reasoning engines based on a combination of logical features. Of course,more research is needed, and the application of coalgebraic techniques in knowledge representation inparticular calls for progress in two speci\fc areas. The \frst concern is the development of a generictheory of learning, or induction of hypotheses, to be able tap into today's distributed knowledge bases.Equally important is the creation of distributed reasoning engines that support the modular paradigmto harness the generally large volume of data computationally.In summary, coalgebraic techniques have a lot to o\u000ber for knowledge representation, \frst and foremost adramatic increase in expressive power that stems from incorporating and combining di\u000berent logics andElectronic Workshops in ComputingThe British Computer Society 9Modal Logics are Coalgebraicreasoning principles that are relevant for representing knowledge. We envisage that this potential willbe realised in the medium term in the form of tangible tool support for (coalgebraic) reasoning aboutknowledge: In a few years time, we will be able to specify the relations of distributed knowledge basesand employ distributed, compositional reasoning to provide e.g. decision support for tra\u000ec networkplanning, based on the integration of a large body of knowledge over the web.2.3. Concurrency and MobilityImagine you are to design the IT infrastructure of a security-relevant operation, say an airport, thatis currently being planned. Users will want to attach to the infrastructure using a plethora of mobiledevices, from handheld computers to mobile phones. Clearly the overall architecture will have to belocation aware up to the point of distances between individuals, reect di\u000berent security clearancesand cater for availability of \fnite resources. The overall architecture will interact with a probabilisticenvironment and be able to incorporate both soft and hard deadlines.Part of the challenge of this task is to provide quality assurances regarding both functional and non-functional requirements while the requirements, and consequently also the layout of the system, is stillsubject to change. Of course, our \frst task in this enterprise is to build a model that caters for all therequirements indicated above, quite possibly in the form of a dedicated calculus. The task of validatingrequirements then takes the form of logical reasoning, with the model providing the necessary semanticalunderpinning. Clearly, compositionality is the key ingredient without which an endeavour like the abovewould not be feasible. One needs to combine both reasoning principles and their underlying semanticmanifestations. We need a modular way to combine location aware and spatial logics with probabilisticaspects, notions of resource, security, concurrency and mobility, all in a framework that honours time.The emphasis needs to be placed on exibility, as new requirements may emerge and the model issubject to constant change.The above scenario discusses just one (very concrete) example of tasks that lie ahead of us in thefuture. Very similar problems manifest themselves in three of the nine Grand Challenges in ComputingResearch: we mention Global and Ubiquitous Computing, Dependable Systems Evolution and ScalableUbiquitous Computing Systems. We believe that coalgebraic modelling, and associated coalgebraiclogics, are very well positioned to bring about signi\fcant advances in global computing at large. First,the coalgebraic model is exible. That is, it can incorporate many di\u000berent types of behaviour andinteraction, e.g. location awareness, mobility and quantitative uncertainty, to name but a few. Second,the coalgebraic model is compositional: both on the logical and the semantical level it allows us combinecomputational features and reason about their interaction. Finally, the coalgebraic model is uniform, i.e.all computational aspects of the model share the same meta-theory. This in particular leads to softwaretools that are easier to design, to maintain and to implement.It is precisely the large number and diverse nature of networked devices as well as the possiblydisastrous consequences of failure that call for an integrated and compositional approach to modellingand veri\fcation as provided by the coalgebraic paradigm. As it stands, this presents two researchchallenges. To fully maximise the bene\ft of the coalgebraic approach, more investment both at thetheoretical and practical level is needed. On the theoretical side, a more compartmentalised analysis ofmobility primitives and their interactions needs to be provided, together with a compositionality layerthat speci\fcally addresses the needs of ubiquitous computing. On the practical side, this needs to bematched with adequate and modular tool support, speci\fcally concerning automated reasoning andmodel checking.In summary, we envisage that the coalgebraic approach will play a leading role in the area of formalmodels of ubiquitous computation in the medium and long term. In a world where we rely on increasinglycomplex and self-managing networks to an unprecedented level, quality assurance in the sense ofmathematical proof will be indispensable soon in a large number of areas, ranging from intelligentsensor networks to medical smartcards that store and encode highly con\fdential information.Electronic Workshops in ComputingThe British Computer Society 10Modal Logics are Coalgebraic3. CONCLUSIONSCoalgebraic logic is an immensely rich \feld with a multitude of applications, of which we could justdescribe a tiny fraction. We believe that the coalgebraic approach views computational phenomenaat precisely the right level of abstraction: the modelling language is extremely exible, while theassociated logics are still decidable in reasonable complexity classes. In conjunction with the built-incompositionality of the method at large, one obtains an extremely powerful framework for the analysisof phenomena in Computer Science and Arti\fcial Intelligence. Apart from foundational research thatextends the arsenal of logical machinery, the most important challenge is the further development oftangible tool support towards optimised e\u000ecient reasoners. Our philosophy here is pick-and-choose, andthe genericity of the coalgebraic approach will manifest itself in a modular and compositional reasoningframework that will be used in areas ranging from the veri\fcation of mobile systems to knowledgerepresentation and arti\fcial intelligence.REFERENCES[1] S. Abramsky. A domain equation for bisimulation. Inf. Comput., 92(2):161{218, 1991.[2] S. Abramsky. Domain theory in logical form. Ann. Pure Appl. Logic, 51:1{77, 1991.[3] S. Abramsky and A. Jung. Domain theory. In S. Abramsky, D. Gabbay, and T. S. E. Maibaum,eds., Handbook of Logic in Computer Science, vol. 3. Clarendon Press, 1994.[4] F. Baader, D. Calvanese, D. McGuinness, D. Nardi, and P. Patel-Schneider, eds. The DescriptionLogic Handbook. Cambridge University Press, 2003.[5] M. Bonsangue and A. Kurz. \u0019-calculus in logical form. In Logic in Computer Science, LICS 2007,pp. 303{312. IEEE, 2007.[6] G. Calin, R. Myers, D. Pattinson, and L. Schr oder. CoLoSS: The coalgebraic logic satis\fabilitysolver (system description). In Methods for Modalities, M4M-5, ENTCS. Elsevier, 2008. Toappear.[7] B. Chellas. Modal Logic. Cambridge University Press, 1980.[8] C. C^ \u0010rstea. A modular approach to de\fning and characterising notions of simulation. Inf. Comput.,204(4):468{502, 2006.[9] C. C^ \u0010rstea and D. Pattinson. Modular construction of complete coalgebraic logics. Theoret.Comput. Sci., 388:83{108, 2007.[10] C. C^ \u0010rstea and M. Sadrzadeh. Modular games for coalgebraic \fxed point logics. In CoalgebraicMethods in Computer Science, CMCS 2008, vol. 203 of ENTCS. Elsevier, 2008.[11] E. Clarke, O. Grumberg, and D. Peled, eds. Model Checking. MIT Press, 2000.[12] S. Demri and D. Lugiez. Presburger modal logic is only PSPACE-complete. In AutomatedReasoning, IJCAR 06, vol. 4130 of LNAI, pp. 541{556. Springer, 2006.[13] D. Elgesem. The modal logic of agency. Nordic J. Philos. Logic, 2:1{46, 1997.[14] R. Fagin and J. Y. Halpern. Reasoning about knowledge and probability. J. ACM, 41:340{367,1994.[15] M. Fiore, E. Moggi, and D. Sangiorgi. A fully-abstract model for the pi-calculus (extendedabstract). In Logic in Computer Science, LICS 1996, pp. 43{54. IEEE, 1996.[16] N. Friedman and J. Y. Halpern. Conditional logics for belief change. In Arti\fcial Intelligence,AAAI 1994, pp. 915{921. AAAI Press, 1994.[17] E. Gr adel, W. Thomas, and T. Wilke, eds. Automata, Logic, and In\fnite Games, vol. 2500 ofLNCS. Springer, 2002.[18] J. Halpern. Reasoning About Uncertainty. MIT Press, 2003.[19] A. Heifetz and P. Mongin. Probabilistic logic for type spaces. Games and Economic Behavior,35:31{53, 2001.[20] M. Hennessy and R. Milner. Algebraic Laws for Non-determinism and Concurrency. J. ACM,32:137{161, 1985.[21] I. Horrocks, U. Sattler, and S. Tobies. Practical reasoning for expressive description logics. InLogic for Programming and Automated Reasoning, LPAR 99, vol. 1705 of LNCS, pp. 161{180.Springer, 1999.[22] D. Janin and I. Walukiewicz. Automata for the modal \u0016-calculus and related results. InMathematical Foundations of Computer Science, MFCS 1995, vol. 969 of LNCS, pp. 552{562.Springer, 1995.Electronic Workshops in ComputingThe British Computer Society 11Modal Logics are Coalgebraic[23] P. Johnstone. Stone spaces, vol. 3 of Cambridge Studies in Advanced Mathematics. CambridgeUniversity Press, 1993.[24] B. Jonsson, K. Larsen, and W. Yi. Probabilistic extensions of process algebras. In J. Bergstra,A. Ponse, and S. Smolka, eds., Handbook of Process Algebra, pp. 685{710. Elsevier, 2001.[25] C. Kupke, A. Kurz, and D. Pattinson. Ultra\flter extensions for coalgebras. In Algebra andCoalgebra in Computer Science, CALCO 2005, vol. 3629 of LNCS, pp. 263{277. Springer, 2005.[26] C. Kupke and Y. Venema. Closure properties of coalgebra automata. In Logic in ComputerScience, LICS 2005, pp. 199{208. IEEE, 2005.[27] C. Kupke and Y. Venema. Coalgebraic automata theory: basic results. Logical Methods inComputer Science, to appear.[28] K. Larsen and A. Skou. Bisimulation through probabilistic testing. Inform. Comput., 94:1{28,1991.[29] R. Milner. Communicating and Mobile Systems: the \u0019-Calculus. Cambridge University Press,1999.[30] R. Milner, J. Parrow, and D. Walker. Modal logics for mobile processes. Theoret. Comput. Sci.,114:149{171, 1993.[31] E. Pacuit and S. Salame. Majority logic. In Principles of Knowledge Representation and Reasoning,KR 2004, pp. 598{605. AAAI Press, 2004.[32] R. Parikh. The logic of games and its applications. In M. Karpinski and J. van Leeuwen, eds.,Topics in the Theory of Computation, vol. 24 of Annals of Discrete Mathematics. Elsevier, 1985.[33] D. Pattinson. Coalgebraic modal logic: Soundness, completeness and decidability of localconsequence. Theoret. Comput. Sci., 309:177{193, 2003.[34] D. Pattinson and L. Schr oder. Admissibility of cut in coalgebraic logics. In Coalgebraic Methodsin Computer Science, CMCS 2008, vol. 203 of ENTCS. Elsevier, 2008.[35] D. Pattinson and L. Schr oder. Beyond rank 1: Algebraic semantics and \fnite models for coalgebraiclogics. In Foundations of Software Science and Computation Structures, FOSSACS 2008, vol. 4962of LNCS, pp. 66{80. Springer, 2008.[36] M. Pauly. A modal logic for coalitional power in games. J. Logic Comput., 12(1):149{166, 2002.[37] M. Rabin. Decidability of second-order theories and automata on in\fnite trees. Trans. AMS,141:1{35, 1969.[38] A. Rector and I. Horrocks. Experience building a large, re-usable medical ontology using adescription logic with transitivity and concept inclusions. In Arti\fcial Intelligence, AAAI 1997.AAAI Press, 1997.[39] L. Schr oder. A \fnite model construction for coalgebraic modal logic. J. Logic AlgebraicProgramming, 73:97{110, 2007.[40] L. Schr oder and D. Pattinson. PSPACE reasoning for rank-1 modal logics. In Logic in ComputerScience, LICS 2006, pp. 231{240. IEEE, 2006. Extended version to appear in ACM Trans. Comput.Logic; preprint available as e-print arXiv:0706.4044.[41] L. Schr oder and D. Pattinson. Modular algorithms for heterogeneous modal logics. In Automata,Languages and Programming, ICALP 07, vol. 4596 of LNCS, pp. 459{471. Springer, 2007.[42] L. Schr oder and D. Pattinson. Rank-1 modal logics are coalgebraic. In Theoretical Aspects ofComputer Science, STACS 2007, vol. 4393 of LNCS, pp. 573{585, 2007.[43] L. Schr oder and D. Pattinson. How many toes do I have? Parthood and number restrictions indescription logics. In Principles of Knowledge Representation and Reasoning, KR 2008. AAAIPress, 2008. To appear.[44] L. Schr oder and D. Pattinson. Shallow models for non-iterative modal logics. In Proc. GermanConference on Arti\fcial Intelligence, KI 2008, LNAI. Springer, 2008. To appear. Extended versionavailable as e-print arXiv:0802.0116.[45] I. Stark. A fully abstract domain model for the \u0019-calculus. In Logic in Computer Science, LICS1996, pp. 36{42. IEEE, 1996.[46] Y. Venema. Automata and \fxed point logic: a coalgebraic perspective. Inf. Comput., 204:637{678,2006.[47] G. H. von Wright. Deontic logic. Mind, 60:1{15, 1951.Electronic Workshops in ComputingThe British Computer Society 12",
    "id": 1509103,
    "identifiers": {
        "doi": null,
        "oai": "oai:eprints.soton.ac.uk:266889"
    },
    "title": "Modal Logics are Coalgebraic",
    "language": {
        "code": "en",
        "name": "English"
    },
    "publishedDate": "2008-01-01T00:00:00+00:00",
    "publisher": null,
    "references": [
        {
            "id": 36243509,
            "title": "A  model construction for coalgebraic modal logic.",
            "authors": [],
            "date": "2007",
            "doi": "10.1016/j.jlap.2006.11.004",
            "raw": "L. Schr oder. A nite model construction for coalgebraic modal logic. J. Logic Algebraic Programming, 73:97{110, 2007.",
            "cites": null
        },
        {
            "id": 36243471,
            "title": "A domain equation for bisimulation.",
            "authors": [],
            "date": "1991",
            "doi": "10.1006/inco.1991.9999",
            "raw": "S. Abramsky. A domain equation for bisimulation. Inf. Comput., 92(2):161{218, 1991.",
            "cites": null
        },
        {
            "id": 36243515,
            "title": "A fully abstract domain model for the -calculus.",
            "authors": [],
            "date": "1996",
            "doi": "10.1109/lics.1996.561301",
            "raw": "I. Stark. A fully abstract domain model for the -calculus. In Logic in Computer Science, LICS 1996, pp. 36{42. IEEE, 1996.",
            "cites": null
        },
        {
            "id": 36243486,
            "title": "A fully-abstract model for the pi-calculus (extended abstract).",
            "authors": [],
            "date": "1996",
            "doi": "10.1109/lics.1996.561302",
            "raw": "M. Fiore, E. Moggi, and D. Sangiorgi. A fully-abstract model for the pi-calculus (extended abstract). In Logic in Computer Science, LICS 1996, pp. 43{54. IEEE, 1996.",
            "cites": null
        },
        {
            "id": 36243506,
            "title": "A modal logic for coalitional power in games.",
            "authors": [],
            "date": "2002",
            "doi": "10.1093/logcom/12.1.149",
            "raw": "M. Pauly. A modal logic for coalitional power in games. J. Logic Comput., 12(1):149{166, 2002.",
            "cites": null
        },
        {
            "id": 36243478,
            "title": "A modular approach to de and characterising notions of simulation.",
            "authors": [],
            "date": "2006",
            "doi": "10.1016/j.ic.2005.04.005",
            "raw": "C. C^ rstea. A modular approach to dening and characterising notions of simulation. Inf. Comput., 204(4):468{502, 2006.",
            "cites": null
        },
        {
            "id": 36243504,
            "title": "Admissibility of cut in coalgebraic logics.",
            "authors": [],
            "date": "2008",
            "doi": "10.1016/j.entcs.2008.05.027",
            "raw": "D. Pattinson and L. Schr oder. Admissibility of cut in coalgebraic logics. In Coalgebraic Methods in Computer Science, CMCS 2008, vol. 203 of ENTCS. Elsevier, 2008.",
            "cites": null
        },
        {
            "id": 36243490,
            "title": "Algebraic Laws for Non-determinism and Concurrency.",
            "authors": [],
            "date": "1985",
            "doi": "10.1145/2455.2460",
            "raw": "M. Hennessy and R. Milner. Algebraic Laws for Non-determinism and Concurrency. J. ACM, 32:137{161, 1985.",
            "cites": null
        },
        {
            "id": 36243516,
            "title": "Automata and  point logic: a coalgebraic perspective.",
            "authors": [],
            "date": "2006",
            "doi": "10.1016/j.ic.2005.06.003",
            "raw": "Y. Venema. Automata and xed point logic: a coalgebraic perspective. Inf. Comput., 204:637{678, 2006.",
            "cites": null
        },
        {
            "id": 36243492,
            "title": "Automata for the modal -calculus and related results.",
            "authors": [],
            "date": "1995",
            "doi": "10.1007/3-540-60246-1_160",
            "raw": "D. Janin and I. Walukiewicz. Automata for the modal -calculus and related results. In Mathematical Foundations of Computer Science, MFCS 1995, vol. 969 of LNCS, pp. 552{562. Springer, 1995. Electronic Workshops in Computing The British Computer Society 11Modal Logics are Coalgebraic",
            "cites": null
        },
        {
            "id": 36243505,
            "title": "Beyond rank 1: Algebraic semantics and  models for coalgebraic logics.",
            "authors": [],
            "date": "2008",
            "doi": "10.1007/978-3-540-78499-9_6",
            "raw": "D. Pattinson and L. Schr oder. Beyond rank 1: Algebraic semantics and nite models for coalgebraic logics. In Foundations of Software Science and Computation Structures, FOSSACS 2008, vol. 4962 of LNCS, pp. 66{80. Springer, 2008.",
            "cites": null
        },
        {
            "id": 36243498,
            "title": "Bisimulation through probabilistic testing.",
            "authors": [],
            "date": "1991",
            "doi": "10.1016/0890-5401(91)90030-6",
            "raw": "K. Larsen and A. Skou. Bisimulation through probabilistic testing. Inform. Comput., 94:1{28, 1991.",
            "cites": null
        },
        {
            "id": 36243475,
            "title": "calculus in logical form.",
            "authors": [],
            "date": "2007",
            "doi": "10.1109/lics.2007.36",
            "raw": "M. Bonsangue and A. Kurz. -calculus in logical form. In Logic in Computer Science, LICS 2007, pp. 303{312. IEEE, 2007.",
            "cites": null
        },
        {
            "id": 36243496,
            "title": "Closure properties of coalgebra automata.",
            "authors": [],
            "date": "2005",
            "doi": "10.1109/lics.2005.10",
            "raw": "C. Kupke and Y. Venema. Closure properties of coalgebra automata. In Logic in Computer Science, LICS 2005, pp. 199{208. IEEE, 2005.",
            "cites": null
        },
        {
            "id": 36243497,
            "title": "Coalgebraic automata theory: basic results.",
            "authors": [],
            "date": null,
            "doi": "10.2168/lmcs-4(4:10)2008",
            "raw": "C. Kupke and Y. Venema. Coalgebraic automata theory: basic results. Logical Methods in Computer Science, to appear.",
            "cites": null
        },
        {
            "id": 36243503,
            "title": "Coalgebraic modal logic: Soundness, completeness and decidability of local consequence.",
            "authors": [],
            "date": "2003",
            "doi": "10.1016/s0304-3975(03)00201-9",
            "raw": "D. Pattinson. Coalgebraic modal logic: Soundness, completeness and decidability of local consequence. Theoret. Comput. Sci., 309:177{193, 2003.",
            "cites": null
        },
        {
            "id": 36243476,
            "title": "CoLoSS: The coalgebraic logic satis solver (system description).",
            "authors": [],
            "date": "2008",
            "doi": "10.1016/j.entcs.2009.02.028",
            "raw": "G. Calin, R. Myers, D. Pattinson, and L. Schr oder. CoLoSS: The coalgebraic logic satisability solver (system description). In Methods for Modalities, M4M-5, ENTCS. Elsevier, 2008. To appear.",
            "cites": null
        },
        {
            "id": 36243499,
            "title": "Communicating and Mobile Systems: the -Calculus.",
            "authors": [],
            "date": "1999",
            "doi": "10.1017/s0956796801224113",
            "raw": "R. Milner. Communicating and Mobile Systems: the -Calculus. Cambridge University Press, 1999.",
            "cites": null
        },
        {
            "id": 36243487,
            "title": "Conditional logics for belief change.",
            "authors": [],
            "date": "1994",
            "doi": "10.1016/b978-1-4832-1452-8.50115-9",
            "raw": "N. Friedman and J. Y. Halpern. Conditional logics for belief change. In Articial Intelligence, AAAI 1994, pp. 915{921. AAAI Press, 1994.",
            "cites": null
        },
        {
            "id": 36243507,
            "title": "Decidability of second-order theories and automata on in trees.",
            "authors": [],
            "date": "1969",
            "doi": "10.2307/1995086",
            "raw": "M. Rabin. Decidability of second-order theories and automata on innite trees. Trans. AMS, 141:1{35, 1969.",
            "cites": null
        },
        {
            "id": 36243517,
            "title": "Deontic logic.",
            "authors": [],
            "date": "1951",
            "doi": "10.1093/mind/lx.237.1",
            "raw": "G. H. von Wright. Deontic logic. Mind, 60:1{15, 1951. Electronic Workshops in Computing The British Computer Society 12",
            "cites": null
        },
        {
            "id": 36243472,
            "title": "Domain theory in logical form.",
            "authors": [],
            "date": "1991",
            "doi": "10.1016/0168-0072(91)90065-t",
            "raw": "S. Abramsky. Domain theory in logical form. Ann. Pure Appl. Logic, 51:1{77, 1991.",
            "cites": null
        },
        {
            "id": 36243473,
            "title": "Domain theory.",
            "authors": [],
            "date": "1994",
            "doi": "10.1007/978-3-642-38164-5_12",
            "raw": "S. Abramsky and A. Jung. Domain theory. In S. Abramsky, D. Gabbay, and T. S. E. Maibaum, eds., Handbook of Logic in Computer Science, vol. 3. Clarendon Press, 1994.",
            "cites": null
        },
        {
            "id": 36243508,
            "title": "Experience building a large, re-usable medical ontology using a description logic with transitivity and concept inclusions.",
            "authors": [],
            "date": "1997",
            "doi": null,
            "raw": "A. Rector and I. Horrocks. Experience building a large, re-usable medical ontology using a description logic with transitivity and concept inclusions. In Articial Intelligence, AAAI 1997. AAAI Press, 1997.",
            "cites": null
        },
        {
            "id": 36243513,
            "title": "How many toes do I have? Parthood and number restrictions in description logics.",
            "authors": [],
            "date": "2008",
            "doi": null,
            "raw": "L. Schr oder and D. Pattinson. How many toes do I have? Parthood and number restrictions in description logics. In Principles of Knowledge Representation and Reasoning, KR 2008. AAAI Press, 2008. To appear.",
            "cites": null
        },
        {
            "id": 36243501,
            "title": "Majority logic.",
            "authors": [],
            "date": "2004",
            "doi": null,
            "raw": "E. Pacuit and S. Salame. Majority logic. In Principles of Knowledge Representation and Reasoning, KR 2004, pp. 598{605. AAAI Press, 2004.",
            "cites": null
        },
        {
            "id": 36243477,
            "title": "Modal Logic.",
            "authors": [],
            "date": "1980",
            "doi": "10.1017/cbo9780511621192",
            "raw": "B. Chellas. Modal Logic. Cambridge University Press, 1980.",
            "cites": null
        },
        {
            "id": 36243500,
            "title": "Modal logics for mobile processes.",
            "authors": [],
            "date": "1993",
            "doi": "10.1016/0304-3975(93)90156-n",
            "raw": "R. Milner, J. Parrow, and D. Walker. Modal logics for mobile processes. Theoret. Comput. Sci., 114:149{171, 1993.",
            "cites": null
        },
        {
            "id": 36243511,
            "title": "Modular algorithms for heterogeneous modal logics.",
            "authors": [],
            "date": "2007",
            "doi": "10.1007/978-3-540-73420-8_41",
            "raw": "L. Schr oder and D. Pattinson. Modular algorithms for heterogeneous modal logics. In Automata, Languages and Programming, ICALP 07, vol. 4596 of LNCS, pp. 459{471. Springer, 2007.",
            "cites": null
        },
        {
            "id": 36243479,
            "title": "Modular construction of complete coalgebraic logics.",
            "authors": [],
            "date": "2007",
            "doi": "10.1016/j.tcs.2007.06.002",
            "raw": "C. C^ rstea and D. Pattinson. Modular construction of complete coalgebraic logics. Theoret. Comput. Sci., 388:83{108, 2007.",
            "cites": null
        },
        {
            "id": 36243480,
            "title": "Modular games for coalgebraic  point logics.",
            "authors": [],
            "date": "2008",
            "doi": "10.1016/j.entcs.2008.05.020",
            "raw": "C. C^ rstea and M. Sadrzadeh. Modular games for coalgebraic xed point logics. In Coalgebraic Methods in Computer Science, CMCS 2008, vol. 203 of ENTCS. Elsevier, 2008.",
            "cites": null
        },
        {
            "id": 36243491,
            "title": "Practical reasoning for expressive description logics.",
            "authors": [],
            "date": "1999",
            "doi": "10.1007/3-540-48242-3_11",
            "raw": "I. Horrocks, U. Sattler, and S. Tobies. Practical reasoning for expressive description logics. In Logic for Programming and Automated Reasoning, LPAR 99, vol. 1705 of LNCS, pp. 161{180. Springer, 1999.",
            "cites": null
        },
        {
            "id": 36243481,
            "title": "Presburger modal logic is only PSPACE-complete.",
            "authors": [],
            "date": "2006",
            "doi": "10.1007/11814771_44",
            "raw": "S. Demri and D. Lugiez. Presburger modal logic is only PSPACE-complete. In Automated Reasoning, IJCAR 06, vol. 4130 of LNAI, pp. 541{556. Springer, 2006.",
            "cites": null
        },
        {
            "id": 36243494,
            "title": "Probabilistic extensions of process algebras.",
            "authors": [],
            "date": "2001",
            "doi": "10.1016/b978-044482830-9/50029-1",
            "raw": "B. Jonsson, K. Larsen, and W. Yi. Probabilistic extensions of process algebras. In J. Bergstra, A. Ponse, and S. Smolka, eds., Handbook of Process Algebra, pp. 685{710. Elsevier, 2001.",
            "cites": null
        },
        {
            "id": 36243489,
            "title": "Probabilistic logic for type spaces.",
            "authors": [],
            "date": "2001",
            "doi": "10.1006/game.1999.0788",
            "raw": "A. Heifetz and P. Mongin. Probabilistic logic for type spaces. Games and Economic Behavior, 35:31{53, 2001.",
            "cites": null
        },
        {
            "id": 36243510,
            "title": "PSPACE reasoning for rank-1 modal logics.",
            "authors": [],
            "date": "2006",
            "doi": "10.1109/lics.2006.44",
            "raw": "L. Schr oder and D. Pattinson. PSPACE reasoning for rank-1 modal logics. In Logic in Computer Science, LICS 2006, pp. 231{240. IEEE, 2006. Extended version to appear in ACM Trans. Comput. Logic; preprint available as e-print arXiv:0706.4044.",
            "cites": null
        },
        {
            "id": 36243512,
            "title": "Rank-1 modal logics are coalgebraic.",
            "authors": [],
            "date": "2007",
            "doi": "10.1007/978-3-540-70918-3_49",
            "raw": "L. Schr oder and D. Pattinson. Rank-1 modal logics are coalgebraic. In Theoretical Aspects of Computer Science, STACS 2007, vol. 4393 of LNCS, pp. 573{585, 2007.",
            "cites": null
        },
        {
            "id": 36243485,
            "title": "Reasoning about knowledge and probability.",
            "authors": [],
            "date": "1994",
            "doi": "10.1145/174652.174658",
            "raw": "R. Fagin and J. Y. Halpern. Reasoning about knowledge and probability. J. ACM, 41:340{367, 1994.",
            "cites": null
        },
        {
            "id": 36243488,
            "title": "Reasoning About Uncertainty.",
            "authors": [],
            "date": "2003",
            "doi": "10.1145/1027914.1027920",
            "raw": "J. Halpern. Reasoning About Uncertainty. MIT Press, 2003.",
            "cites": null
        },
        {
            "id": 36243514,
            "title": "Shallow models for non-iterative modal logics.",
            "authors": [],
            "date": "2008",
            "doi": "10.1007/978-3-540-85845-4_40",
            "raw": "L. Schr oder and D. Pattinson. Shallow models for non-iterative modal logics. In Proc. German Conference on Articial Intelligence, KI 2008, LNAI. Springer, 2008. To appear. Extended version available as e-print arXiv:0802.0116.",
            "cites": null
        },
        {
            "id": 36243493,
            "title": "Stone spaces, vol. 3 of Cambridge Studies in Advanced Mathematics.",
            "authors": [],
            "date": "1993",
            "doi": null,
            "raw": "P. Johnstone. Stone spaces, vol. 3 of Cambridge Studies in Advanced Mathematics. Cambridge University Press, 1993.",
            "cites": null
        },
        {
            "id": 36243474,
            "title": "The Description Logic Handbook.",
            "authors": [],
            "date": "2003",
            "doi": "10.1108/k.2003.06732iae.006",
            "raw": "F. Baader, D. Calvanese, D. McGuinness, D. Nardi, and P. Patel-Schneider, eds. The Description Logic Handbook. Cambridge University Press, 2003.",
            "cites": null
        },
        {
            "id": 36243502,
            "title": "The logic of games and its applications.",
            "authors": [],
            "date": "1985",
            "doi": "10.1016/s0304-0208(08)73078-0",
            "raw": "R. Parikh. The logic of games and its applications. In M. Karpinski and J. van Leeuwen, eds., Topics in the Theory of Computation, vol. 24 of Annals of Discrete Mathematics. Elsevier, 1985.",
            "cites": null
        },
        {
            "id": 36243483,
            "title": "The modal logic of agency.",
            "authors": [],
            "date": "1997",
            "doi": null,
            "raw": "D. Elgesem. The modal logic of agency. Nordic J. Philos. Logic, 2:1{46, 1997.",
            "cites": null
        },
        {
            "id": 36243495,
            "title": "Ultra extensions for coalgebras.",
            "authors": [],
            "date": "2005",
            "doi": "10.1007/11548133_17",
            "raw": "C. Kupke, A. Kurz, and D. Pattinson. Ultralter extensions for coalgebras. In Algebra and Coalgebra in Computer Science, CALCO 2005, vol. 3629 of LNCS, pp. 263{277. Springer, 2005.",
            "cites": null
        }
    ],
    "sourceFulltextUrls": [],
    "updatedDate": "",
    "yearPublished": "2008",
    "links": [
        {
            "type": "display",
            "url": "https://core.ac.uk/outputs/1509103"
        }
    ],
    "abstract": "Applications of modal logics are abundant in computer science, and a large number of structurally different modal logics have been successfully employed in a diverse spectrum of application contexts. Coalgebraic semantics, on the other hand, provides a uniform and encompassing view on the large variety of specific logics used in particular domains. The coalgebraic approach is generic and compositional: tools and techniques simultaneously apply to a large class of application areas and can moreover be combined in a modular way. In particular, this facilitates a pick-and-choose approach to domain specific formalisms, applicable across the entire scope of application areas, leading to generic software tools that are easier to design, to implement, and to maintain. This paper substantiates the authors' firm belief that the systematic exploitation of this coalgebraic nature will not only have impact on the field of modal logic itself but also lead to significant progress in a number of areas within computer science, such as knowledge representation and concurrency/mobility",
    "tags": [],
    "fulltextStatus": "enabled",
    "subjects": [],
    "oai": "oai:eprints.soton.ac.uk:266889",
    "deleted": "ALLOWED",
    "disabled": false,
    "journals": null,
    "repositories": {
        "id": "34",
        "openDoarId": 0,
        "name": "Southampton (e-Prints Soton)",
        "urlHomepage": null,
        "uriJournals": null,
        "physicalName": "noname",
        "roarId": 0,
        "baseId": 0,
        "pdfStatus": null,
        "nrUpdates": 0,
        "lastUpdateTime": null
    },
    "repositoryDocument": {
        "id": 1509103,
        "depositedDate": null,
        "publishedDate": "2008-01-01T00:00:00+00:00",
        "updatedDate": "2024-02-19T06:45:24+00:00",
        "acceptedDate": null,
        "createdDate": "2012-04-05T19:26:26+01:00"
    },
    "urls": [],
    "lastUpdate": "2024-02-19T06:45:24+00:00",
    "setSpecs": []
}