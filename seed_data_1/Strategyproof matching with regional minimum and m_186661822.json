{
    "acceptedDate": "",
    "authors": [
        {
            "name": "Masahiro Goto"
        },
        {
            "name": "Atsushi Iwasaki"
        },
        {
            "name": "Yujiro Kawasaki"
        },
        {
            "name": "Ryoji Kurata"
        },
        {
            "name": "Yosuke Yasuda"
        },
        {
            "name": "Makoto Yokoo"
        }
    ],
    "contributors": [],
    "createdDate": "2019-02-15T22:57:11+00:00",
    "dataProvider": {
        "id": 2508,
        "name": "Creative Repository of Electro-Communications",
        "url": "https://api.core.ac.uk/v3/data-providers/2508",
        "logo": "https://api.core.ac.uk/data-providers/2508/logo"
    },
    "depositedDate": "",
    "documentType": "research",
    "doi": "10.1016/j.artint.2016.02.002",
    "downloadUrl": "https://core.ac.uk/download/186661822.pdf",
    "fullText": "国立大学法人電気通信大学 / The University of Electro-CommunicationsStrategyproof matching with regional minimumand maximum quotas著者（英） Masahiro Goto, Atsushi Iwasaki, YujiroKawasaki, Ryoji Kurata, Yosuke Yasuda, MakotoYokoojournal orpublication titleArtificial Intelligencevolume 235page range 40-57year 2016URL http://id.nii.ac.jp/1438/00008835/doi: 10.1016/j.artint.2016.02.002CC BY-NC-ND 4.0Artiﬁcial Intelligence 235 (2016) 40–57Contents lists available at ScienceDirectArtiﬁcial Intelligencewww.elsevier.com/locate/artintStrategyproof matching with regional minimum and maximum quotas✩Masahiro Goto a, Atsushi Iwasaki b, Yujiro Kawasaki c, Ryoji Kurata a, Yosuke Yasuda d, Makoto Yokoo a,∗a Graduate School of Information Science and Electrical Engineering, Kyushu University, Fukuoka, Japanb Graduate School of Information Systems, University of Electro-Communications, Tokyo, Japanc School of Business Administration, Kwansei Gakuin University, Hyogo, Japand Department of Economics, Osaka University, Osaka, Japana r t i c l e i n f o a b s t r a c tArticle history:Received 4 April 2015Received in revised form 27 January 2016Accepted 10 February 2016Available online 23 February 2016Keywords:Two-sided matchingMany-to-one-matchingMarket designMatching with contractsMatching with constraintsStrategyproofnessDeferred acceptanceThis paper considers matching problems with individual/regional minimum/maximum quotas. Although such quotas are relevant in many real-world settings, there is a lack of strategyproof mechanisms that take such quotas into account. We ﬁrst show that without any restrictions on the regional structure, checking the existence of a feasible matching that satisﬁes all quotas is NP-complete. Then, assuming that regions have a hierarchical structure (i.e., a tree), we show that checking the existence of a feasible matching can be done in time linear in the number of regions. We develop two strategyproof matching mechanisms based on the Deferred Acceptance mechanism (DA), which we call Priority List based Deferred Acceptance with Regional minimum and maximum Quotas (PLDA-RQ) and Round-robin Selection Deferred Acceptance with Regional minimum and maximum Quotas (RSDA-RQ). When regional quotas are imposed, a stable matching may no longer exist since fairness and nonwastefulness, which compose stability, are incompatible. We show that both mechanisms are fair. As a result, they are inevitably wasteful. We show that the two mechanisms satisfy different versions of nonwastefulness respectively; each is weaker than the original nonwastefulness. Moreover, we compare our mechanisms with an artiﬁcial cap mechanism via simulation experiments, which illustrate that they have a clear advantage in terms of nonwastefulness and student welfare.© 2016 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).1. IntroductionIn this paper, we consider a two-sided matching problem. In a standard two-sided matching problem, there are two types of agents, where one type called a student is matched to another type called a school. Multiple students can be matched to ✩ This paper is based on the authors’ conference publication [9]. The difference between this paper and [9] is as follows. In this paper, we use a strictly more general model, in which regional minimum and maximum quotas co-exist, while Goto et al. [9] consider only regional minimum quotas. They developed two mechanisms, one is fair but wasteful, while the other is nonwasteful but not fair. Both mechanisms cannot handle regional maximum quotas. In this paper, we concentrate on fair mechanisms and develop two fair mechanisms, one of which can be considered as an extension of the fair mechanism developed in [9].* Corresponding author.E-mail addresses: goto@agent.inf.kyushu-u.ac.jp (M. Goto), iwasaki@is.uec.ac.jp (A. Iwasaki), y-kawasaki@kwansei.ac.jp (Y. Kawasaki), kurata@agent.inf.kyushu-u.ac.jp (R. Kurata), yosuke.yasuda@gmail.com (Y. Yasuda), yokoo@inf.kyushu-u.ac.jp (M. Yokoo).http://dx.doi.org/10.1016/j.artint.2016.02.0020004-3702/© 2016 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/4.0/).M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 41Table 1DA-based mechanisms with regional quotas. ∗ indicates our contribution, † indicates a special case that can be covered by our contribution. (KK: Kamada and Kojima [18], BFIM: Biro et al. [2], FITUY: Fragiadakis et al. [7], GIKYY: Goto et al. [10].)Maximum quotasIndividual Hierarchical regions General regionsMinimum quotasNone DA KK/BFIM GIKYYNP-complete∗Individual FITUY †Hierarchical regions † PLDA-RQ∗ RSDA-RQ∗General regions NP-complete∗a single school, and a school has an individual maximum quota: the number of students assigned to a school cannot exceed a certain limit. In this paper, we use the terms “students” and “schools” to represent agents in our model, but our results can obviously be applied to other two-sided matching problems, such as matching medical residents to hospitals, cadets to military branches, workers to ﬁrms, and so on.The theory of two-sided matching has been extensively developed.1 However, many real-world matching markets are subject to more general distributional constraints. For example, school districts might need at least a certain number of students in each school to operate, as in college admissions in Hungary [2], i.e., individual minimum quotas must be satisﬁed. Also, in the early 2000s, the United States Military Academy solicited cadet preferences over assignments to various branches and imposed minimum and maximum quotas on the number of students who could be assigned to each branch [25,26]. Diversity constraints at schools can also be considered as a minimum quota problem, where students are divided into several types according to their socioeconomic status, and school districts impose a minimum quota for each type of students at each school. Furthermore, minimum/maximum quotas can be imposed on a set of schools (region) rather than on an individual school. One motivating example of this model is a hospital–resident matching problem. Assume a policy maker requires that a certain number of residents be assigned to hospitals on an isolated island. She also hopes to avoid an excessive concentration of residents in metropolitan areas. However, she does not want to interfere with how these residents are assigned within the hospitals on the island or in the metropolitan area.Table 1 summarizes the existing works related to regional minimum/maximum quotas. We assume that individual max-imum quotas are requisite since virtually all existing works assume the existence of individual maximum quotas.2 When considering regional quotas, we distinguish a special case where the regions have a hierarchical structure. When only in-dividual maximum quotas are imposed, the standard Deferred Acceptance mechanism (DA) [8] is widely used because it is strategyproof and stable. Since stability is decomposed fairness and nonwastefulness, DA is fair and nonwasteful. Also, regional maximum quotas, in which regions have a hierarchical structure, are considered in [2,10,18]. Individual minimum quotas are considered in [7] and two DA-based strategyproof mechanisms are developed. However, as shown in Table 1, a number of interesting combinations remain unexplored, which we examine in this paper.More speciﬁcally, we ﬁrst analyze the complexity for checking whether a feasible matching (which satisﬁes all regional quotas) exists or not, when we put no restrictions on regions. We then prove that this problem is NP-complete. Since checking the existence of a feasible matching is intractable in general, we concentrate on a special case where regions have a hierarchical structure. As described in Table 1, we consider the most general case in this setting, where each region and each individual school can simultaneously impose both minimum and maximum quotas.A hierarchical structure is ubiquitous in any company, university, or military organization. When such an organization as a company allocates human resources, it is natural to assume that the obtained matching must satisfy the feasibility constraints at various levels in the organization hierarchy; each division, department, or section, has its own minimum/max-imum quotas. Such feasibility constraints can naturally be represented by regional quotas.We develop two strategyproof mechanisms based on the DA, which we call Priority List based DA with Regional minimum and maximum Quotas (PLDA-RQ) and Round-robin Selection Deferred Acceptance with Regional minimum and maximum Quotas (RSDA-RQ). These mechanisms are inspired by two existing mechanisms that can handle regional maximum quotas [10,18]. We say a matching is fair if no school wants to replace a student matched to it with another student who prefers to be matched with the school. Also, we say a matching is nonwasteful if student s wishes to be assigned to school cbut is not accepted, then there must be a plausible reason, i.e., moving s to c violates some maximum/minimum quotas. A matching which satisﬁes fairness and nonwastefulness is called stable matching.3 When regional quotas are imposed, a stable matching may no longer exist, i.e., fairness and nonwastefulness are incompatible. PLDA-RQ and RSDA-RQ are fair, thus the matchings obtained by these mechanisms can be wasteful. We show that the two mechanisms satisfy different versions of nonwastefulness respectively; each is weaker than the original nonwastefulness. Moreover, we compare our mechanisms with an artiﬁcial cap mechanism (in which regional quotas are removed by imposing artiﬁcial caps so that the 1 See Roth and Sotomayor [24] for a comprehensive survey of many results in this literature.2 If we set each individual quotas large enough, e.g., equal to the number of students, it becomes non-binding. Thus, we can represent a case without individual maximum quotas.3 Technically, stability further requires individual rationality. However, in our environment where no agent is unacceptable, individual rationality is trivially satisﬁed. Based on this observation, we regard a stable matching as a fair and nonwasteful matching throughout the paper.42 M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57standard DA can be applied) via simulation experiments. Experimental results illustrate that our mechanisms have a clear advantage in terms of nonwastefulness and student welfare.1.1. Related literatureThere is substantial literature on two-sided matching [24]. In recent years, matching problems with some constraints have been broadly studied.Kamada and Kojima [18] consider the residency matching problem in Japan, in which maximum quotas to regions (disjoint sets of schools) are imposed. They show that, with regional maximum quotas, a stable matching does not always exist, and propose a strategyproof mechanism that produces a matching that satisﬁes a weaker stability requirement. Goto et al. [10] also consider a matching problem with regional maximum quotas, and introduce another strategyproof mechanism that produces a matching taking schools’ competition in each region into account. Fragiadakis et al. [7] study school choice problems where each school/college needs a certain number of students for operation, i.e., individual minimum quotas. Our work is based on [7,10,18] and extends their mechanisms to handle regional minimum/maximum quotas.Motivated by the matching system for higher education in Hungary, Biro et al. [2] consider two kinds of college admission problems; one is with individual minimum quotas, and the other is with regional maximum quotas. In both cases, they show that a stable matching may not exist and checking the existence of the one is NP-complete. On the other hand, they prove that, if the regional structure is hierarchical and the colleges in the same region have identical priorities, a variation of the DA can ﬁnd stable matchings with regional maximum quotas. However, we cannot use their mechanisms in our settings since we assume that schools have heterogeneous priorities and regional minimum quotas are imposed.Monte and Tumennasan [22] consider the problem of assigning agents to different projects, where each project needs more than a particular number of agents. In this problem, each project does not have a priority over agents. Thus, this model can be regarded as an extension of the house allocation problem rather than the matching problem between two-sided agents. They develop a strategyproof serial dictatorship mechanism for this setting. However, this mechanism cannot handle regional quotas.Also, in the literature of computer science, several generalizations of the standard stable matching have been proposed, and the complexity of checking the existence of a (generalized) stable matching has been discussed [16]. Huang [16] con-siders a hierarchical (laminar) system, which is different from our model. In [16], each applicant (student) is matched with an institute (school), where the applicants are classiﬁed into subgroups called classes. Minimum/maximum quotas are im-posed on classes, but no quota is imposed on groups of institutes. By contrast, in our model, each student is matched with a school, and groups of schools (regions) have minimum/maximum quotas. Fleiner and Kamiyama [6] extend the model in [16] to many-to-many matching cases. Hamada et al. [14] also study matching with minimum quotas in the hospitals–residents problem, showing that minimizing the number of blocking pairs is an NP-hard problem when minimum quotas are imposed. Our setting is different from these existing works since we handle regional quotas, and our complexity result is on checking the existence of a feasible matching. Also, these works do not discuss strategy issues, which is one of main concerns in our paper.Minimum quotas are also discussed in a controlled school choice program [4,13,19,21]. However, models and theoretical properties in a controlled school choice program setting are quite different from the setting used in our paper. Kojima [19]considers a model where students are divided into two types, i.e., minority and majority, and shows that setting hard-bounds for the number of majority students may hurt the minority students. To overcome this shortcoming, Hafalir et al. [13] propose soft-bounds for the number of minority students. Kominers and Sönmez [21] consider a model where each seat/slot of one school has a different priority ranking for students. This model can represent certain types of aﬃrmative action and can be considered a generalization of the model in [13]. Ehlers et al. [4] generalize the model in [13] to cases where the number of student types can be more than two. Ehlers et al. [4] show several impossibility results when these minimum quotas are hard constraints. They obtain positive results when these minimum quotas are soft bounds. Westkamp [27] analyzes complex (maximum) quota constraints in the German university admissions system, while Braun et al. [3]conduct an experimental analysis of the same system. In our setting, students are not partitioned into different types. Thus, although minimum quotas are hard constraints, positive results have been obtained [7].We use the framework of matching with contracts due to Hatﬁeld and Milgrom [15].4 They identify a set of conditions for key results in matching with contracts. More speciﬁcally, if the choice function of every school satisﬁes three conditions (i.e., substitutability, the law of aggregate demand, and the irrelevance of rejected contracts) then a mechanism called gen-eralized Deferred Acceptance (DA) mechanism ﬁnds a “stable” allocation, and the mechanism is strategyproof for students. There are several recent works related to a general framework for handling various distributional constraints. Kojima et al. [20] propose a general framework that can handle a general class of constraints (represented by matroidal constraints and an M\u0002-concave function). Their framework provides an alternative method to [15] for proving the fact that the general-ized DA is strategyproof. Although it is possible to apply their framework in our setting, we use a more familiar, standard framework based on [15]. Note that although Hatﬁeld and Milgrom [15] and Kojima et al. [20] provide useful tool kits for 4 Fleiner [5] obtains some of the results including the existence of a stable allocation in a framework that is more general than the model of Hatﬁeld and Milgrom [15]. On the other hand, he does not show results regarding incentives, which are important for our purposes.M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 43proving that the generalized DA mechanism is strategyproof, developing a concrete mechanism that works for new types of constraints remains challenging; we need to appropriately design a choice function of schools so that their frameworks are applicable while the required design goals can be achieved. Goto et al. [11] present a general framework for handling more general class of constraints (beyond M\u0002-concavity). Their mechanism (called Adaptive DA) is strategyproof and nonwasteful, but not fair. In this paper, we concentrate on fair mechanisms. Our new mechanisms are not an instance of their mechanism. Kamada and Kojima [17] also provide a general framework for handling (hierarchical) regional maximum quotas. However, their model does not consider regional minimum quotas. When only regional maximum quotas exist, our RSDA-RQ mecha-nism can be considered as one instance of their mechanism. However, even in this case, our PLDA-RQ mechanism is not an instance of their mechanism. Yokoi [28] proposes another general framework, in which each school has a matroidal choice function, but without any distributional constraints between schools. In this paper, we consider a model where distributional constraints are imposed on a group of schools. Thus, we cannot apply the framework of Yokoi [28] to our model.We develop mechanisms that can directly handle regional quotas. An alternative approach is to artiﬁcially modify indi-vidual quotas so that all regional quotas can be automatically satisﬁed when individual quotas are satisﬁed. Then, we can apply any existing mechanisms that can handle only individual quotas. We call such a mechanism artiﬁcial cap mechanism. As long as artiﬁcial caps are determined independently from students’ preferences, an artiﬁcial cap mechanism is strate-gyproof. Such a mechanism is used in the Japan Residency Matching Program, in which the capacities of hospitals in urban areas such as Tokyo are reduced so that more doctors will be forced to apply to hospitals in rural areas [18]. In Section 6, we show the advantage of our approach over the artiﬁcial cap mechanism.The remainder of this paper is organized as follows. In Section 2, we ﬁrst introduce a general model in which we do not put any restrictions on the regional structure. Next, in Section 3, we examine the complexity for checking the existence of a feasible matching for the general case and the hierarchical case. In Section 4, we describe the generalized DA mechanism and its properties. Then, Section 5 introduces our newly developed mechanisms. Next, Section 6 shows the advantage of our approach over the artiﬁcial cap mechanism via computer simulations. Finally, Section 7 concludes our paper.2. ModelA market is a tuple (S, C, R, p, q, \u0003S , \u0003C , X, \u0003PL). S = {s1, s2, . . . , sn} is a set of students, C = {c1, c2, . . . , cm} is a set of schools, and R = {r1, r2, . . .} is a set of regions, each of which is simply a set of schools r ∈ 2C \\ {∅}. We assume |R|, i.e., the number of regions, is polynomial in |C |, i.e., the number of schools. We assume each region has its minimum/maximum quotas, i.e., p = (pr)r∈R and q = (qr)r∈R are the regional minimum and maximum quota vectors, where 0 ≤ pr ≤ qr for all r ∈ R . When r consists of a single school c, p{c}/q{c} represent the minimum/maximum quota for individual school pc/qc . Each student s has a strict preference relation \u0003s over the schools, and each school c has an idiosyncratic strict priority relation \u0003c over the students.5 The vectors of all such relations are denoted as \u0003S= (\u0003s)s∈S for the students and \u0003C= (\u0003c)c∈C for the schools. We assume that all schools are acceptable to all students and vice versa. Without this assumption, we cannot guarantee the existence of a feasible matching even if the number of students is large and the minimum quotas are small.6,7We follow the model presented in [15], where a student and a school are matched by a contract.8 X = S × C is a set of all contracts, where (s, c) ∈ X represents a contract by which s is matched with c. A matching is expressed as a set of contracts X ′ ⊆ X . For any agent a ∈ S ∪ C , X ′a denotes the set of contracts related to a in X ′ . Let X ′r denote ⋃c∈r X ′c . \u0003PLis a serial order over X called priority list, which represents a tie-breaking order among contracts. The priority list should respect the priority ordering of each school, i.e., the following condition holds: (s, c) \u0003PL (s′, c) holds iff s \u0003c s′ .One simple and natural way to construct a priority list is to use the ranks of the students for each school and a tie-breaking ordering over schools. Let rankc(s) denote the rank of student s according to school c’s priority ordering on students. To be more precise, if s is ranked k-th from the top in c’s priority ordering, then rankc(s) = k. Let us assume the tie-breaking ordering is deﬁned as c1 → c2 → . . . → cm . Given this tie-breaking ordering, we deﬁne each binary relation in priority list \u0003PL as follows: for any s, s′ ∈ S and any ci, c j ∈ C , (s, ci) \u0003PL (s′, c j) holds if one of the following conditions holds:• rankci (s) < rankc j (s′), or• rankci (s) = rankc j (s′) and i < j.5 To be more precise, school c has a preference over sets of students. We assume c has a preference that is responsive with maximum quota qc [23], which is obtained by the strict priority relation over students \u0003c .6 This assumption is motivated by some real-life applications. For example, in many universities in Japan, an undergraduate student who majors in engi-neering must be assigned to a laboratory to conduct a project, and the project is required for graduation. In this setting, every student can be assumed to be acceptable to every laboratory and vice versa. Also, this assumption would be reasonable for a public school choice problem. In some other applications, e.g., a hospital–resident matching, this assumption might be too demanding.7 Considering the worst-case, to guarantee that a student is matched to some school, a student must submit her complete preference ordering (complete list) of all schools. Nevertheless, assume student s is matched to school c when she submits a complete list. Then, if she submits an incomplete list, in which schools worse than c are removed, the obtained matching is the same. Thus, we can expect our proposed mechanisms would work ﬁne with incomplete lists as long as the list is suﬃciently long.8 The model presented in [15], a contract can contain other terms, e.g., wages or working hours, when matching a worker to a ﬁrm. Here, we assume a contract contains no other terms except the information of the related student/school.44 M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57In other words, for two pairs of (s, c) and (s′c′), (s, c) \u0003PL (s′, c′) holds if the ranking of s for c is strictly higher than that of s′ for c′ . If the rankings are the same, then the schools use tie-breaking ordering among schools. If there exists an organization or a consortium in which all hospitals are involved, it would be possible to agree on a more sophisticated method to generate a priority list.We say X ′ is school-feasible if ∀r, pr ≤ |X ′r | ≤ qr holds. We say X ′ is student-feasible if ∀s, |X ′s| = 1 holds. Then, we say X ′ is feasible if it is student- and school-feasible. Also, we say X ′ is semi-school-feasible if there exists X ′′ ⊇ X ′ such that X ′′ is school-feasible. We say a mechanism is feasible if it produces a feasible matching for every possible proﬁle of preferences and priorities.A mechanism is a function that takes a proﬁle of students’ preferences as input and returns a matching. We say a mechanism is strategyproof if no student ever has any incentive to misreport her preference, regardless what other students report.We introduce several desirable properties of matchings and mechanisms.Deﬁnition 1 (fairness). Given feasible matching X ′ , student s has justiﬁed envy toward s′ , if there exist (s, c), (s′, c′) ∈ X ′ , such that the following conditions hold: (i) c′ \u0003s c and (ii) s \u0003c′ s′ . We say that feasible matching X ′ is fair if no student has justiﬁed envy. We say a mechanism is fair if it always obtains a fair matching.In words, student s has justiﬁed envy when she would rather be matched to school c′ than her current match c, and she has higher priority at c′ than student s′ who is assigned to c′ .Deﬁnition 2 (nonwastefulness). Given feasible matching X ′ , student s claims an empty seat of c′ , if there exists (s, c) ∈ X ′such that the following conditions hold: (i) c′ \u0003s c, and (ii) matching X ′′ , which is obtained from X ′ by moving s from c to c′ , is feasible. More precisely, X ′′ is given as (X ′ ∪ {(s, c′)}) \\ {(s, c)}. We say that feasible matching X ′ is nonwasteful if no student claims an empty seat. We say a mechanism is nonwasteful if it always obtains a nonwasteful matching.In general, fairness and nonwastefulness cannot coexist when minimum/maximum quotas are imposed (even if there exist no regional maximum/minimum quotas), i.e., there exists a case where no matching is fair and nonwasteful [4,7,18], as shown in the following example.Example 1. Assume S = {s1, s2}, C = {c1, c2, c3}, qc = 2 for all c ∈ C , pc1 = 1, and pc2 = pc3 = 0. The preferences of students are given as follows: c2 \u0003s1 c3 \u0003s1 c1, c3 \u0003s2 c2 \u0003s2 c1.The priorities of schools are given as: s1 \u0003c1 s2, s2 \u0003c2 s1, s1 \u0003c3 s2.Here, c1 is the least popular school for both s1 and s2, but at least one student must be assigned to c1 since pc1 = 1. Assume s1 is allocated to c1. Then, s2 must be allocated to her most preferred school c3, or otherwise, s2 claims an empty seat of c3. However, then s1 has justiﬁed envy toward s2 since s1 \u0003c3 s2. Similarly, assume s2 is allocated to c1. Then s1 must be allocated to her most preferred school c2, or otherwise, s1 claims an empty seat of c2. However, then s2 has justiﬁed envy toward s1 since s2 \u0003c2 s1.Let us introduce two conditions that are weaker than nonwastefulness.Deﬁnition 3 (PL-nonwasteful). Student s, who is assigned to c, claims an empty seat of c′ by PL in feasible matching X ′ if: (i) c′ \u0003s c, (ii) (X ′ \\ {(s, c)}) ∪ {(s, c′)} is feasible, and (iii) (s, c′) \u0003PL (s, c). A matching is PL-nonwasteful if no student claims an empty seat by PL. We say a mechanism is PL-nonwasteful if it always produces a PL-nonwasteful matching.In words, the claim of student s for moving her from c to c′ is regarded as legitimate only when the priority list supportsthis, i.e., (s, c′) \u0003PL (s, c) holds.Deﬁnition 4 (school-equitable-nonwastefulness). Student s, who is assigned to c, school-equitably claims an empty seatof c′ in feasible matching X ′ if: (i) c′ \u0003s c, (ii) (X ′ \\ {(s, c)}) ∪ {(s, c′)} is feasible, and (iii) |X ′c | − |X ′c′ | ≥ 2. A matching is school-equitably-nonwasteful if no student school-equitably claims an empty seat. We say a mechanism is school-equitably-nonwasteful if it always produces a school-equitably-nonwasteful matching.In words, the claim of student s is regarded as legitimate only when moving s from c to c′ strictly decreases the imbalance of students among these schools.99 If minimum/maximum quotas of two schools are signiﬁcantly different, requiring the balance between these schools might be meaningless. As discussed in [18], we can modify the deﬁnition such that the deviation from a certain ideal distribution is minimized. To be more precise, we assume for each school c, its target quota q˜c is deﬁned, and condition (iii) is modiﬁed as (|X ′c | − q˜c) − (|X ′c′ | − q˜c′ ) ≥ 2.M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 45Assume in Example 1, the priority list is deﬁned as: (s1, c1) \u0003PL (s2, c2) \u0003PL (s1, c3) \u0003PL (s2, c1) \u0003PL (s1, c2) \u0003PL (s2, c3). This priority list is generated from schools’ priorities and a tie-breaking ordering c1 → c2 → c3. Then, X ′ = {(s1, c1), (s2, c2)}is fair and PL-nonwasteful, since the claim of student s2 to move her from c2 to c1 is not supported by the priority list. X ′is also fair and school-equitably-nonwasteful, since moving s2 from c2 to c1 does not strictly decrease the imbalance among c1 and c2.PL-nonwastefulness and school-equitable-nonwastefulness are independent. A PL-nonwasteful matching can be not school-equitably-nonwasteful and vice versa. Let us consider the following example.Example 2. Assume S = {s1, s2}, C = {c1, c2}, qc = 2 for all c ∈ C , and pc = 0 for all c ∈ C . Schools c1 and c2 form a region with regional maximum quota 2. The preferences of students are given as follows: c1 \u0003s1 c2 and c2 \u0003s2 c1. The priorities of schools are given as: s1 \u0003c1 s2 and s1 \u0003c2 s2. The priority list is given as: (s1, c1) \u0003PL (s1, c2) \u0003PL (s2, c1) \u0003PL (s2, c2).Here, X ′ = {(s1, c1), (s2, c1)} is PL-nonwasteful since the claim of student s2 to move her from c1 to c2 is not supported by the priority list, while it is not school-equitably-nonwasteful, since moving s2 from c1 to c2 strictly decreases the imbalance among c1 and c2. Assume the case where c1 \u0003s2 c2. Then, X ′ = {(s1, c1), (s2, c2)} is school-equitably-nonwasteful, since moving s2 from c2 to c1 increases the imbalance among c1 and c2, but it is not PL-nonwasteful since the claim of student s2 to move her from c2 to c1 is supported by the priority list.Let us introduce an alternative fairness requirement, which we call PL-fairness. This requirement is based on the under-lining priority list. PL-fairness implies fairness.Deﬁnition 5 (PL-fairness). Given feasible matching X ′ , student s has justiﬁed envy by PL toward s′ if there exist (s, c), (s′, c′) ∈ X ′ and (s, c′′) ∈ X \\ X ′ , such that the following conditions hold: (i) c′′ \u0003s c, (ii) (s, c′′) \u0003PL (s′, c′), and (iii) (X ′ ∪ {(s, c′′)}) \\ {(s′, c′)} is school-feasible. We say that feasible matching X ′ is PL-fair if no student has justiﬁed envy by PL. We say a mechanism is PL-fair if it always produces a PL-fair matching.In words, student s has justiﬁed envy by PL in X ′ if s prefers c′′ over her current assigned school c, (s, c′′) has higher priority than (s′, c′) according to \u0003PL , and the set of contracts obtained by removing (s′, c′) and adding (s, c′′) is school-feasible. If we restrict our attention to the case where c′′ = c′ , this deﬁnition becomes identical to Deﬁnition 1. Intuitively, PL-fairness means that if student s wants a seat of school c′′ and student s′ wants a seat of school c′ , but giving these seats to both students will violate some quotas, then this competition must be settled based on the priority list.3. Complexity of ﬁnding a feasible matching3.1. General caseGiven an instance of a market, the ﬁrst question we need to answer is whether a feasible matching exists or not. In the model with only individual maximum/minimum quotas, this question is easy, i.e., it suﬃces to check whether ∑c∈C pc ≤ n ≤∑c∈C qc holds. However, by introducing regional maximum/minimum quotas, this question becomes hard, i.e., it becomes NP-complete.Theorem 1. Given S, C , R, p, and q, checking whether a feasible matching exists or not is NP-complete. This holds even for the case where ∀r ∈ R, |r| ≤ 3.Proof. Clearly, for given matching X ′ , checking whether it satisﬁes all quotas can be done in O (|R| · |C |). Thus, this problem is in NP.To show that this problem is NP-hard, we reduce an arbitrary 3-SAT problem instance to a matching problem with regional maximum/minimum quotas. 3-SAT consists of set of boolean variables V and set of clauses L. Each clause l is a disjunction of three literals, each of which is either boolean variable x ∈ V or its negation ¬x, e.g., x1 ∨ ¬x2 ∨ x3.Now, for a given 3-SAT problem instance, we create an equivalent matching problem instance as follows. For each literal (i.e., x or ¬x), we create a school. A pair of x and ¬x forms a region, whose minimum/maximum quotas are 1. Also, for each l ∈ L, the schools in l form a region, whose minimum quota is 1. There are n students, where n = |V |.Assume that there exists a feasible matching in this problem. Then, let us determine an instantiation of the variables as follows: if a student is assigned to x, x is TRUE (thus, ¬x is FALSE). If a student is assigned to ¬x, ¬x is TRUE (thus x is FALSE). Note that x and ¬x form a region, whose minimum/maximum quotas are 1. Thus, each student is assigned to either x or ¬x, but not both at the same time. Thus, the truth value of x is uniquely determined. Then, for each clause l, since its minimum quota is 1, at least one literal in l is TRUE. Thus, clause l is satisﬁed. Therefore, this 3-SAT instance is satisﬁable. Also, if there exists no feasible matching, then, there exists no instantiation of the variables that satisﬁes all the clauses. Thus, this 3-SAT instance is unsatisﬁable. \u0002Note that a regional maximum quota can be represented as a regional minimum quota and vice versa. For example, assume that there exists region r, whose minimum quota is pr . Then, we can replace it with complementary region r¯ = C \\r, 46 M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57Fig. 1. Example of tree structure.whose maximum quota qr¯ = n − pr . This modiﬁed problem is equivalent to the original problem. Thus, the following theorem holds.Theorem 2. Given S, C , R, p, and q, checking whether a feasible matching exists or not is NP-complete. This holds even for the case where (i) there exist only maximum quotas, or (ii) there exist only minimum quotas.3.2. Hierarchical caseSince checking the existence of a feasible matching is intractable in general, in the rest of this paper, we concentrate on a special case where regions are hierarchical.10 A similar hierarchical model is used in [2,18].Deﬁnition 6 (hierarchical region). We say set of regions R is hierarchical if ∀r, r′ ∈ R where r \u000f= r′ , one of the following holds: (i) r ∩ r′ = ∅, (ii) r ⊂ r′ , or (iii) r′ ⊂ r.If set of regions R is hierarchical, we can construct a tree that represents R . We assume that C , which is the region that contains all schools, is included in R . We also assume C has non-binding minimum quota pC = n and maximum quota qC = n, where n is the number of students. Furthermore, we assume for each c ∈ C , {c} ∈ R , i.e., for each school c ∈ C , there exists a region that consists of a single school c.Deﬁnition 7 (tree). Tree TR for set of regions R is deﬁned as follows: (i) root node C is the region that contains all the schools, (ii) leaf node {c} is a region that contains only one individual school c ∈ C , and (iii) for each node r ∈ R , where r \u000f= C , its parent node r′ ∈ R is a region that is the proper inclusion-minimal superset of r.Fig. 1 shows an example of a tree structure. Let children(r) denote a set of child nodes of r. For a leaf node, i.e., r = {c}, children(r) is ∅. It is clear that r =⋃r′∈children(r) r′ holds for |r| > 1. We often use the terms “node” and “region” interchangeably.In contrast to the general case, in a hierarchical model, checking the existence of a feasible matching can be done in linear time, i.e., the following theorem holds.Theorem 3. Given S, C , R, p, q, and TR , checking whether a feasible matching exists or not is solved in time linear in the number of nodes in TR .Proof. A procedure for solving this problem can be described as follows. First, we revise pr in a depth-ﬁrst manner so that pr is replaced by:max⎛⎝pr, ∑r′∈children(r)pr′⎞⎠ .10 If we ignore computational costs and fairness, we can apply the strategyproof mechanism proposed in [11] when regions are non-hierarchical.M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 47Similarly, we revise qr in a depth-ﬁrst manner so that qr is replaced by:min⎛⎝qr, ∑r′∈children(r)qr′⎞⎠ .Finally, we check whether pr ≤ qr holds for all r ∈ R . If this is the case, a feasible matching exists. Otherwise, there exists no feasible matching.It is clear that if pr <∑r′∈children(r) pr′ , it is non-binding and can be replaced by ∑r′∈children(r) pr′ . It is also clear that if qr >∑r′∈children(r) qr′ , it is non-binding and can be replaced by ∑r′∈children(r) qr′ . If pr > qr holds for some r, it is clear that there exists no feasible matching. Also, if pr ≤ qr holds for all r, and pC , qC = n holds at root node C , starting from the root node, we can divide n students into several groups and pass one group to one child, so that its regional minimum/maxi-mum quotas are satisﬁed. By recursively doing this, we can ﬁnd the assignments of all individual schools, which satisfy all minimum/maximum quotas.It is obvious that this procedure ﬁnishes in time linear in the number of nodes in TR . \u0002In the rest of this paper, we assume regions are hierarchical and∑r′∈children(r)pr′ ≤ pr ≤ qr ≤∑r′∈children(r)qr′holds for all r ∈ R . Note that the tree in Fig. 1 satisﬁes this condition.4. Generalized DAIn this section, we introduce a skeleton of a mechanism called generalized Deferred Acceptance (DA) mechanism [15]and its properties. This mechanism uses choice functions ChS : 2X → 2X and ChC : 2X → 2X . For each student s, its choice function Chs(X ′) chooses {x}, where x = (s, c) ∈ X ′s such that c is her most preferred school within X ′s (we assume Chs(X ′) =∅ if X ′s = ∅). Then, the choice function of all students is given as: ChS (X ′) :=⋃s∈S Chs(X ′). There are alternative ways to deﬁne the choice function of schools ChC . As we discuss in the next section, our two mechanisms, PLDA-RQ and RSDA-RQ, can be expressed by the generalized DA with different formulations of ChC .Formally, the generalized DA is deﬁned as follows.Mechanism 1 (generalized DA).1. Re← ∅.2. X ′ ← ChS(X \\ Re), X ′′ ← ChC (X ′).3. If X ′ = X ′′ then return X ′ , otherwise, Re← Re∪ (X ′ \\ X ′′), go to 2.Here, Re is a set of rejected contracts. Students cannot choose contracts in Re. Initially, Re is empty. Thus, each student can choose her most preferred school. The chosen set by students is X ′ . Then, schools choose X ′′ , which is a subset of X ′ . If X ′ = X ′′ , i.e., no contract is rejected by the schools, the mechanism terminates. Otherwise, the mechanism updates Re and repeats the same procedure.Hatﬁeld and Milgrom [15] deﬁne a notion of stability for a matching, which we call HM-stability in this paper.11Deﬁnition 8 (HM-stability). A matching X ′ ⊆ X is said to be HM-stable if X ′ satisﬁes (i) X ′ = ChS(X ′) = ChC (X ′) and (ii) there is no contract (s, c) ∈ X \\ X ′ such that (s, c) ∈ ChS (X ′ ∪ {(s, c)}) and (s, c) ∈ ChC (X ′ ∪ {(s, c)}).Let X denote all HM-stable matchings. We say X ′ ∈X is the student-optimal HM-stable matching if all students weakly prefer X ′ over any other matching in X .For ChC , we require that the following three proprieties hold.Irrelevance of rejected contracts: For any X ′ ⊆ X and x ∈ X \\ X ′ , ChC (X ′) = ChC (X ′ ∪ {x}) holds if x /∈ ChC (X ′ ∪ {x}). In words, this condition requires when adding x to X ′ , if x is not accepted, then x does not affect the outcomes of other contracts in X ′ .Law of aggregate demand: For any X ′, X ′′ ⊆ X with X ′ ⊆ X ′′ , |ChC (X ′)| ≤ |ChC (X ′′)| holds. In words, this condition requires that the number of accepted contracts weakly increases when more contracts are added.11 Hatﬁeld and Milgrom [15] as well as many others deﬁne stability in such a way that a block by a coalition that includes multiple students is allowed. Such a concept is identical to our deﬁnition if the schools have substitutable preferences.48 M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57Substitutes condition: For any X ′, X ′′ ⊆ X with X ′ ⊆ X ′′ , X ′ \\ ChC (X ′) ⊆ X ′′ \\ ChC (X ′′) holds. In words, this condition re-quires that if contract x is rejected in X ′ , then it is also rejected when more contracts are added to X ′ .Hatﬁeld and Milgrom [15] show that if ChC satisﬁes these three properties, the generalized DA is strategyproof, and the obtained matching is the student-optimal HM-stable matching.12To show that ChC satisﬁes the above three properties, it is often convenient to use a property called single-improvement property, which was ﬁrst proposed in [12].Deﬁnition 9 (single-improvement property). We say ChC satisﬁes the single-improvement property if for any X ′ ⊆ X , x ∈ X \\ X ′ , one of the following conditions holds: (i) ChC (X ′ ∪ {x}) = ChC (X ′), (ii) ChC (X ′ ∪ {x}) = ChC (X ′) ∪ {x}, or (iii) ChC (X ′ ∪ {x}) =(ChC (X ′) \\ {y}) ∪ {x}, where y ∈ ChC (X ′).In words, the single-improvement property means, by adding contract x to X ′ , the chosen set of contracts ChC (X ′ ∪{x}) is unchanged, i.e., it is the same as ChC (X ′), or x is simply added to ChC (X ′), or x is added while single contract y is removed from ChC (X ′).The following lemma holds.Lemma 1. If ChC satisﬁes the single-improvement property, it also satisﬁes the irrelevance of rejected contracts, the law of aggregated demand, and the substitutes condition. Thus, the generalized DA is strategyproof and obtains the student-optimal HM-stable matching.Proof. From Deﬁnition 9, it is clear that for any X ′ ⊆ X and x ∈ X \\ X ′ , if x /∈ ChC (X ′ ∪ {x}), ChC (X ′) = ChC (X ′ ∪ {x}) holds. Thus, the irrelevance of rejected contracts holds. Also, from Deﬁnition 9, by adding new contract x, the size of the chosen set of contracts is weakly increasing. Thus, the law of aggregate demand holds. Furthermore, from Deﬁnition 9, if y ∈X ′ \\ ChC (X ′), then y /∈ ChC (X ′ ∪ {x}) holds. Thus, the substitutes condition holds. \u00025. Mechanism with regional minimum and maximum quotasWe ﬁrst introduce a concept called expected minimum count, which is convenient for checking semi-school-feasibility.5.1. Expected minimum countIn a DA-based mechanism, we need to check whether matching X ′ is semi-school-feasible or not. In an existing work for handling minimum quotas [7], minimum quotas are transformed into maximum quotas in order to check the semi-school-feasibility of X ′ . To be more precise, minimum quota pr of r is transformed as maximum quota n − pr of r¯ = C \\ r, where nis the number of students. We assume X ′ is semi-school-feasible if it satisﬁes all (i.e., original and transformed) maximum quotas.However, when regional/individual minimum/maximum quotas coexist, we cannot apply this simple transformation method due to the interaction among these quotas. For example, let us consider the tree structure presented in Fig. 1, but the maximum quota of c1 is 4, and the minimum quota of c2 is 2. There exist students s1, . . . , s8. Assume X ′ ={(s1, c1), (s2, c1), (s3, c1), (s4, c1)}. X ′ satisﬁes all of the original maximum quotas. Also, the individual minimum quota of c2 is transformed into a maximum quota, which requires that the number of students assigned to schools except c2 is at most n − 2 = 6. X ′ satisﬁes this transformed maximum quota since the number of students assigned to schools except c2is 4 < 6. However, X ′ is not semi-school-feasible. Since the regional maximum quota of {c1, c2} is 5, by assigning 4 stu-dents to c1, only one more student can be assigned to r, which is not enough to satisfy the minimum quota of c2. When regional/individual minimum/maximum quotas coexist, we need to consider the interaction among these quotas to check the semi-school-feasibility of the contracts.We deﬁne an expected minimum count as follows.Deﬁnition 10 (expected minimum count). For matching X ′ , the expected minimum count for each r, denoted by er(X ′), is deﬁned as follows:er(X′) :={ |X ′r | if |r| = 1,∑r′∈children(r) max(er′(X ′), pr′)otherwise.Intuitively, er(X ′) represents the minimum number of students allocated to region r when all regions r′ \u0002 r satisfy their minimum quotas. By this deﬁnition, for each region r, er(X ′) ≥ |X ′r | holds. Also, er(X ′) = |X ′r | holds iff all regions r′ \u0002 rsatisfy their minimum quotas. Furthermore, for any X ′, X ′′ ⊆ X , if X ′ ⊆ X ′′ , then er(X ′) ≤ er(X ′′) holds for all r ∈ R .12 To be more precise, Hatﬁeld and Milgrom [15] implicitly assume the irrelevance of rejected contracts throughout their analysis. Aygün and Sönmez [1]point this out and show that this condition is important for the conclusions of Hatﬁeld and Milgrom [15].M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 49The following theorem holds.Theorem 4. For a matching X ′ ⊆ X, it is semi-school-feasible iff er(X ′) ≤ qr holds for all r ∈ R.Proof. We ﬁrst show if X ′ is semi-school-feasible, then er(X ′) ≤ qr holds for all r ∈ R . By way of contradiction, assume X ′′ ⊇ X ′ holds, where X ′′ is school feasible, but there exists r such that er(X ′) > qr . Since X ′′ is school-feasible, |X ′′r | ≤ qrholds. Also, since X ′′ satisﬁes all minimum quotas, er(X ′′) = |X ′′r | holds. However, since X ′′ ⊇ X ′ , |X ′′r | = er(X ′′) ≥ er(X ′) > qrholds. Such an X ′′ does not exist. This is a contradiction.Next, we show if er(X ′) ≤ qr holds for all r ∈ R , then X ′ is semi-school-feasible. We consider the following two cases: (i) |X ′| = n and (ii) |X ′| < n. In case (i), for all r ∈ R , |X ′r | ≤ er(X ′) ≤ qr holds. Since |X ′| = eC (X ′) = n holds, all regions r \u0002 Csatisfy their minimum quotas. Thus, X ′ is school-feasible. In case (ii), there exists at least one region r whose minimum quota is not satisﬁed yet. Then, we can ﬁnd school c ∈ r and student s who is not assigned in X ′ such that er(X ′ ∪ {(s, c)}) ≤qr holds for all r ∈ R , by a similar argument used in the proof of Theorem 3. \u0002In the previous example, e{c1,c2}(X ′) = 4 + 2 = 6 > 5 = q{c1,c2} . Thus, X ′ is not semi-school-feasible.5.2. Priority list based deferred acceptance mechanism with regional minimum and maximum quotasThis subsection introduces a strategyproof mechanism called Priority List based Deferred Acceptance mechanism with Regional minimum and maximum Quotas (PLDA-RQ). This mechanism uses a similar idea to Goto et al. [10], who develop a mechanism that can handle regional maximum quotas.The choice function ChC of PLDA-RQ is given as follows.Deﬁnition 11 (choice function of schools ChC (X ′) of PLDA-RQ).1. Initialize Y to ∅.2. Sort X ′ according to \u0003PL .3. For i = 1, 2, . . . , |X ′|, choose (s, c), which is the i-th element in X ′ , and apply the following procedure.• If for all r, er(Y ∪ {(s, c)}) ≤ qr , then add (s, c) to Y .4. Return Y .PLDA-RQ is deﬁned as one instance of the generalized DA mechanism in which ChC is given as Deﬁnition 11.The calculation of ChC is a greedy procedure whose time-complexity is polynomial in |X ′| and |R|. Since Re monotonically increases in Mechanism 1, PLDA-RQ repeats at most O (|S| · |C |) rounds. Thus, its time-complexity is polynomial in |S| and |C |.Example 3. Consider the tree structure presented in Fig. 1. There are eight students, S = {s1, . . . , s8}.The preferences and priorities are deﬁned as follows:\u0003s1 ,\u0003s2 ,\u0003s3 : c4 c3 c2 c1,\u0003s4 ,\u0003s5 ,\u0003s6 : c4 c1 c2 c3,\u0003s7 ,\u0003s8 : c1 c2 c3 c4,\u0003c1 ,\u0003c3 : s1 s2 s3 s4 s5 s6 s7 s8,\u0003c2 ,\u0003c4 : s8 s7 s6 s5 s4 s3 s2 s1.\u0003PL is generated by the rank-based method with tie-breaking ordering c1 → c2 → c3 → c4.In the ﬁrst execution of Line 2 of Mechanism 1, each student chooses her most preferable contract, i.e., X ′ is set to the following:X ′ := { (s6, c4), (s5, c4), (s4, c4), (s3, c4), (s7, c1), (s2, c4), (s8, c1), (s1, c4) },where X ′ is sorted according to the priority list. (s6, c4), (s5, c4), (s4, c4) are sequentially chosen and added to Y . However, when (s3, c4) is chosen, e{c4}(Y ∪ {(s3, c4)}) = 4 > 3 = q{c4} . Hence, (s3, c4) is rejected. Similarly, (s2, c4), (s1, c4) are also rejected, while (s7, c1), (s8, c1) are added to Y . Thus, we obtain X ′′ = X ′ \\ {(s1, c4), (s2, c4), (s3, c4)}. Since X ′ \u000f= X ′′ , we set Re to {(s1, c4), (s2, c4), (s3, c4)} and repeat the procedure.In the second execution of Line 2, each student chooses her most preferred contract that is not included in Re. X ′ is set to the following:X ′ := { (s1, c3), (s2, c3), (s3, c3), (s6, c4), (s5, c4), (s4, c4), (s7, c1), (s8, c1) }.50 M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57(s1, c3), (s2, c3), (s3, c3), (s6, c4), (s5, c4) are sequentially chosen and added to Y . However, when (s4, c4) is chosen, it is rejected since e{c3,c4}(Y ∪ {(s4, c4)}) = 6 > 5 = q{c3,c4} . Then, (s7, c1), (s8, c1) are chosen and added to Y . Thus, we obtain X ′′ = X ′ \\ {(s4, c4)}. Since X ′ \u000f= X ′′ , we set Re to Re∪ {(s4, c4)} and repeat the procedure.In the third execution of Line 2, X ′ is set to the following:X ′ := { (s1, c3), (s2, c3), (s3, c3), (s6, c4), (s4, c1), (s5, c4), (s7, c1), (s8, c1) }.All the contracts except (s8, c1) are sequentially chosen and added to Y . Then, (s8, c1) is rejected since eC (Y ∪ {(s8, c1)}) =9 > 8 = qC . Thus, we obtain X ′′ = X ′ \\ {(s8, c1)}. We set Re to Re∪ {(s8, c1)} and repeat the procedure.In the fourth execution of Line 2, X ′ is set to the following:X ′ := { (s8, c2), (s1, c3), (s2, c3), (s3, c3), (s6, c4), (s4, c1), (s5, c4), (s7, c1) }.Now, X ′ is school-feasible and X ′′ = X ′ . Thus, the mechanism returns this X ′ as output, and terminates.We show the properties that PLDA-RQ satisﬁes.Lemma 2. The choice function ChC of PLDA-RQ satisﬁes the single-improvement property.Proof. For X ′ ⊆ X and x = (s, c) ∈ X , let Preceding(X ′, x) denote {y ∈ X ′ | y \u0003PL x} and Succeeding(X ′, x) denote {y ∈X ′ | x \u0003PL y}. When calculating ChC (X ′ ∪ {x}), it is clear that adding x does not affect the outcome of each contract in Preceding(X ′, x). Also, if x is not accepted, then adding x does not affect the outcome of each contract in Succeeding(X ′, x). Thus, if x is not accepted, ChC (X ′ ∪ {x}) = ChC (X ′), i.e., condition (i) in Deﬁnition 9, holds.Assume x is accepted. If no contract in Succeeding(X ′, x) ∩ChC (X ′) is rejected, i.e., Succeeding(X ′, x) ∩ChC (X ′) ⊆ ChC (X ′ ∪{x}), then it is clear that no contract in Succeeding(X ′, x) \\ ChC (X ′) is accepted. Thus, ChC (X ′ ∪ {x}) = ChC (X ′) ∪ {x}, i.e., condition (ii) in Deﬁnition 9, holds.Assume there exists contract y = (s′, c′) ∈ Succeeding(X ′, x) ∩ChC (X ′) that is rejected, i.e., y /∈ ChC (X ′ ∪ {x}). If there exist multiple rejected contracts, we choose the one that has the highest priority in \u0003PL . Let Y denote ChC (X ′) ∩Preceding(X ′, y). By our deﬁnition of y and Y , Y ⊆ ChC (X ′) and Y ⊆ ChC (X ′ ∪ {x}) hold. Then, there must exist region r that satisﬁes the following properties: c, c′ ∈ r, er(Y ) = qr − 1, er(Y ∪ {y}) = er(Y ∪ {x}) = qr , er(Y ∪ {x, y}) = qr + 1, for all r′ ∈ Path(r, c), pr′ ≤er′(Y ), and for all r′ ∈ Path(r, c′), pr′ ≤ er′ (Y ), where Path(r, c) = {r′ \u0002 r | r′ \u0013 c}, i.e., nodes that are on the path from leaf node c to r. In words, r is the region whose expected minimum count becomes full by either accepting x or y in addition to Y .Let us examine the outcome of contract z = (s′′, c′′) in Succeeding(X ′, y). If c′′ /∈ r, then er′ (Y ∪ {y, z}) = er′ (Y ∪ {x, z})holds for all r′ \u0013 c. Thus, the outcomes of z under X ′ and X ′ ∪ {x} must be identical. Also, if c′′ = c or c′′ = c′ , z is rejected both in ChC (X ′) and ChC (X ′ ∪{x}). Thus, assume c′′ ∈ r, and c′′ is different from c and c′ . In this case, z is accepted in ChC (X ′)iff by adding z, the values of er′ for all r′ ∈ Path(r, c′′) ∩ (Path(r, c) ∪ Path(r, c′)) do not increase (since if this happens, then er(Y ∪{y, z}) > qr holds) and er′ (Y ∪{y, z}) ≤ qr′ holds for all r′ ∈ Path(r, c′′) \\ (Path(r, c) ∪Path(r, c′)). Similarly, z is accepted in ChC (X ′ ∪ {x}) iff by adding z, the values of er′ for all r′ ∈ Path(r, c′′) ∩ (Path(r, c) ∪ Path(r, c′)) does not increase (since if this happens, then er(Y ∪ {x, z}) > qr holds) and er′ (Y ∪ {x, z}) ≤ qr′ holds for all r′ ∈ Path(r, c′′) \\ (Path(r, c) ∪ Path(r, c′)). However, er′(Y ∪ {y, z}) = er′(Y ∪ {x, z}) holds for all r′ ∈ Path(r, c′′) \\ (Path(r, c) ∪ Path(r, c′)). Thus, the outcomes of z under X ′ and X ′ ∪ {x} must be identical. In conclusion, ChC (X ′ ∪ {x}) = (ChC (X ′) ∪ {x}) \\ {y}, i.e., condition (iii) in Deﬁnition 9, holds. \u0002From Lemmas 1 and 2, we can immediately obtain the following theorem.Theorem 5. PLDA-RQ is strategyproof.Also, the following theorem holds.Theorem 6. PLDA-RQ always produces a feasible and fair matching.Proof. Assume X ′ , which is the matching obtained by PLDA-RQ, is not feasible. By the deﬁnition of the generalized DA mechanism, X ′ is semi-school-feasible. Thus, the only possibility that X ′ is not feasible is that some student s is not assigned to any school. Since X ′ is semi-school-feasible, we can choose contract x = (s, c) such that X ′ ∪ {x} is semi-school-feasible. Then, it is clear that x ∈ ChS (X ′ ∪ {x}) and x ∈ ChC (X ′ ∪ {x}) hold. This contradicts the fact that X ′ is HM-stable.Assume X ′ is not fair. Then, there exist (s, c), (s′, c′) ∈ X ′ , such that c′ \u0003s c and s \u0003c′ s′ hold. Since we assume \u0003PLrespects \u0003c′ , (s, c′) \u0003PL (s′, c′) holds. Then, it is clear that (s, c′) ∈ ChS (X ′ ∪ {(s, c′)}) and (s, c′) ∈ ChC (X ′ ∪ {(s, c′)}) hold. This contradicts the fact that X ′ is HM-stable. \u0002From the incompatibility of fairness and nonwastefulness, PLDA-RQ is wasteful since it is fair. We can see in Example 3, s1, s2, and s3 claim an empty seat of c4.M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 51Theorem 7. PLDA-RQ is PL-nonwasteful.Proof. By way of contradiction, assume in matching X ′ , which is obtained by PLDA-RQ, there exist (s, c) ∈ X ′ , (s, c′) ∈ X \\ X ′ , such that c′ \u0003s c, (s, c′) \u0003PL (s, c), and (X ′ ∪ {(s, c′)}) \\ {(s, c)} is feasible. Then, it is clear that (s, c′) ∈ ChS(X ′ ∪ {(s, c′)}) and (s, c′) ∈ ChC (X ′ ∪ {(s, c′)}) hold. This contradicts the fact that X ′ is HM-stable. \u0002Theorem 8. PLDA-RQ is PL-fair.Proof. Assume X ′ , which is obtained by PLDA-RQ, is not PL-fair. Then, there exist (s, c′′) ∈ X \\ X ′ , (s, c), (s′, c′) ∈ X ′ , such that c′′ \u0003s c, (s, c′′) \u0003PL (s′, c′), and (X ′ ∪ {(s, c′′)}) \\ {(s′, c′)} is school-feasible. Then, it is clear that (s, c′′) ∈ ChS (X ′ ∪ {(s, c′′)})and (s, c′′) ∈ ChC (X ′ ∪ {(s, c′′)}) hold. This contradicts the fact that X ′ is HM-stable. \u0002Furthermore, the following lemma holds.Lemma 3. Feasible matching X ′ is HM-stable iff it is PL-fair and PL-nonwasteful.Proof. We ﬁrst show if X ′ is HM-stable, then it is PL-fair and PL-nonwasteful. We already showed that HM-stability implies PL-fairness and PL-nonwastefulness in the proofs of Theorems 7 and 8.Next, we show PL-fairness and PL-nonwastefulness implies HM-stability. By way of contradiction, let us assume feasible matching X ′ is PL-fair and PL-nonwasteful, but there exists (s, c) ∈ X \\ X ′ such that (s, c) ∈ ChS(X ′ ∪ {(s, c)}) and (s, c) ∈ChC (X ′ ∪ {(s, c)}). Assume (s, c′′) ∈ X ′ . Since X ′ is feasible, |X ′| = n. Also, ChC satisﬁes the single-improvement property, there must be exactly one contract (s′, c′) ∈ X ′ such that ChC (X ′ ∪ {(s, c)}) = X ′ \\ {(s′, c′)} ∪ {(s, c)} holds.It is clear that c \u0003s c′′ holds. If c′ = c, then s has justiﬁed envy. Thus, let us assume c′ \u000f= c holds. If s = s′ , (s′, c′) must be identical to (s, c′′). Then, (s, c) \u0003PL (s, c′) holds and X ′ \\ {(s, c′)} ∪ {(s, c)} is feasible. Thus, s claims an empty seat by PL. Thus, let us assume s \u000f= s′ . Then, (s, c) \u0003PL (s′, c′) holds and X ′ \\ {(s′, c′)} ∪ {(s, c)} is school-feasible. Thus, s has justiﬁed envy by PL toward s′. \u0002From Theorems 7, 8, and Lemma 3, we can immediately derive the following theorem.Theorem 9. PLDA-RQ obtains the student-optimal PL-fair and PL-nonwasteful matching.5.3. Round-robin selection deferred acceptance mechanism with regional minimum and maximum quotasThis subsection introduces a strategyproof mechanism called Round-robin Selection Deferred Acceptance mechanism with Regional minimum and maximum Quotas (RSDA-RQ). This mechanism uses a similar idea to the Flexible Deferred Acceptance mechanism presented in [18].We assume a round-robin ordering of schools is deﬁned. If the ordering is c1 → c2 → . . . → cm , c1 is chosen ﬁrst, c2 is chosen next, and so on. After each of m schools are chosen, then c1 is chosen again, then, c2 is chosen again, and so on. In RSDA-RQ, the choice function of schools is deﬁned as follows.Deﬁnition 12 (choice function of schools ChC (X ′) of RSDA-RQ).1. Initialize Y to ∅.2. If each contract in X ′ is either in Y or has been rejected, return Y . Otherwise, choose school c according to the round-robin ordering.3. Choose a contract (s, c), which is not included in Y or has not been rejected yet, and s has the highest priority according to \u0003c .4. If for all r ∈ R , er(Y ∪ {(s, c)}) ≤ qr , add (s, c) to Y . Otherwise, reject (s, c).5. Go to 2.RSDA-RQ is deﬁned as one instance of the generalized DA mechanism in which ChC is given as Deﬁnition 12.The calculation of ChC is a greedy procedure whose time-complexity is polynomial in |X ′| and |R|. Since Re monotonically increases in Mechanism 1, RSDA-RQ repeats at most O (|S| · |C |) rounds. Thus, its time-complexity is polynomial in |S| and |C |.Example 4. Consider the same setting as in Example 3. In the ﬁrst execution of Line 2 of Mechanism 1, each student chooses her most preferable contract, i.e., X ′ is set to the following:X ′ := { (s7, c1), (s6, c4), (s8, c1), (s5, c4), (s4, c4), (s3, c4), (s2, c4), (s1, c4) },52 M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57where X ′ is sorted according to the choice order in ChC . (s7, c1), (s6, c4), (s8, c1), (s5, c4), (s4, c4) are sequentially chosen and added to Y . However, when (s3, c4) is chosen, e{c4}(Y ∪ {(s3, c4)}) = 4 > 3 = q{c4} . Hence, (s3, c4) is rejected. Simi-larly, (s2, c4), (s1, c4) are also rejected. Thus, we obtain X ′′ = X ′ \\ {(s1, c4), (s2, c4), (s3, c4)}. Since X ′ \u000f= X ′′ , we set Re to {(s1, c4), (s2, c4), (s3, c4)} and repeat the procedure.In the second execution of Line 2, each student chooses her most preferred contract that has not been rejected by C , i.e., X ′ is set to the following:X ′ := { (s7, c1), (s1, c3), (s6, c4), (s8, c1), (s2, c3), (s5, c4), (s3, c3), (s4, c4) }.(s7, c1), (s1, c3), (s6, c4), (s8, c1), (s2, c3), (s5, c4), (s3, c3) are sequentially chosen and added to Y . However, when (s4, c4) is chosen, it is rejected since e{c3,c4}(Y ∪ {(s4, c4)}) = 6 > 5 = q{c3,c4} . Thus, we obtain X ′′ = X ′ \\ {(s4, c4)}. Since X ′ \u000f= X ′′ , we set Re to Re∪ {(s4, c4)} and repeat the procedure.In the third execution of Line 2, X ′ is set to the following:X ′ := { (s4, c1), (s1, c3), (s6, c4), (s7, c1), (s2, c3), (s5, c4), (s8, c1), (s3, c3) }.All the contracts except (s3, c3) are sequentially chosen and added to Y . Then, (s3, c3) is rejected since eC (Y ∪ {(s3, c3)}) =9 > 8 = qC . Thus, we obtain X ′′ = X ′ \\ {(s3, c3)}. We set Re to Re∪ {(s3, c3)} and repeat the procedure.In the fourth execution of Line 2, X ′ is set to the following:X ′ := { (s4, c1), (s3, c2), (s1, c3), (s6, c4), (s7, c1), (s2, c3), (s5, c4), (s8, c1) }.Now, X ′ is school-feasible and X ′′ = X ′ . Thus, the mechanism returns this X ′ as output, and terminates.We show the properties that RSDA-RQ satisﬁes.Lemma 4. ChC used in RSDA-RQ satisﬁes the single-improvement property.Proof. Assume x = (s, c) is added to X ′ . Let us assume some contract in X ′c is rejected, i.e., there exists (s′, c) ∈ X ′c such that (s′, c) /∈ ChC (X ′). More speciﬁcally, let us assume top k(< |X ′c|) contracts in X ′c according to \u0003c are accepted and the rest are rejected. Then, by adding x, it is clear that still top k contracts in X ′c ∪ {x} according to \u0003c are accepted and the rest are rejected. Also, the outcomes of contracts related to other schools do not change. If x is accepted, i.e., it is within top kcontracts in X ′c ∪ {x}, then ChC (X ′ ∪ {x}) = (ChC (X ′) ∪ {x}) \\ {y}, i.e., condition (iii) in Deﬁnition 9, holds, where y is k + 1-th contract in X ′c ∪ {x}. If x is rejected, then ChC (X ′ ∪ {x}) = ChC (X ′), i.e., condition (i) in Deﬁnition 9, holds.Next, let us assume all contracts in X ′c are accepted. Then, by adding x = (s, c), still top |X ′c| contracts are accepted. Let x′ = (s′, c) denote the last contract in X ′c ∪ {x} according to \u0003c . If x′ is rejected, then the outcomes of contracts related to other schools do not change. Thus, ChC (X ′ ∪ {x}) = (ChC (X ′) ∪ {x}) \\ {x′}, i.e., condition (iii) in Deﬁnition 9, holds. Assume x′ is accepted. Let Pre denote contracts that are examined before x′ when calculating ChC (X ′ ∪ {x}) in the procedure of Deﬁnition 12, and Suc denote contracts that are examined after x′ .13 If no contract in Suc ∩ ChC (X ′) is rejected, i.e., Suc ∩ChC (X ′) ⊆ ChC (X ′ ∪ {x}), then it is clear that no contract in Suc \\ ChC (X ′) is accepted. Thus, ChC (X ′ ∪ {x}) = ChC (X ′) ∪ {x}, i.e., condition (ii) in Deﬁnition 9, holds.Assume there exists contract y = (s′, c′) ∈ Suc ∩ ChC (X ′) that is rejected, i.e., y /∈ ChC (X ′ ∪ {x}). If there exist multiple rejected contracts, we choose the one that is examined earlier. Let X ′′ denote (X ′ ∪{x}) \\{x′}, i.e., X ′′ is obtained by replacing x′ to x (if x = x′ , we assume X ′ = X ′′). Since |X ′c| = |X ′′c |, X ′c ⊂ ChC (X ′), and X ′′c ⊂ ChC (X ′′) hold, the outcomes of contracts related to other schools are the same between ChC (X ′) and ChC (X ′′). Thus, ChC (X ′) ∪ {x} = ChC (X ′′) ∪ {x′} holds.Let Y denote ChC (X ′′) ∩ Pre. By our deﬁnition of y and Y , Y ⊆ ChC (X ′′) and Y ⊆ ChC (X ′′ ∪ {x′}) hold. Then, there must exist region r that satisﬁes the following properties: c, c′ ∈ r, er(Y ) = qr − 1, er(Y ∪ {y}) = er(Y ∪ {x′}) = qr , er(Y ∪ {x′, y}) =qr +1, for all r′ ∈ Path(r, c), pr′ ≤ er′ (Y ), and for all r′ ∈ Path(r, c′), pr′ ≤ er′ (Y ). Here, as in the proof of Lemma 2, Path(r, c) ={r′ \u0002 r | r′ \u0013 c}, i.e., nodes that are on the path from leaf node c to r. In words, r is the region whose expected minimum count becomes full by either accepting x′ or y in addition to Y .Let us examine the outcome of contract z = (s′′, c′′) in Suc. If c′′ /∈ r, then er′(Y ∪ {y, z}) = er′(Y ∪ {x′, z}) holds for all r′ \u0013 c. Thus, the outcomes of z under X ′′ and X ′′ ∪ {x′} must be identical. Also, if c′′ = c or c′′ = c′ , z is rejected both in ChC (X ′′) and ChC (X ′′ ∪ {x′}). Thus, assume c′′ ∈ r, and c′′ is different from c and c′ . In this case, z is accepted in ChC (X ′′)iff by adding z, the values of er′ for all r′ ∈ Path(r, c′′) ∩ (Path(r, c) ∪ Path(r, c′)) do not increase (since if this happens, then er(Y ∪{y, z}) > qr holds) and er′ (Y ∪{y, z}) ≤ qr′ holds for all r′ ∈ Path(r, c′′) \\ (Path(r, c) ∪Path(r, c′)). Similarly, z is accepted in ChC (X ′′ ∪ {x′}) iff by adding z, the values of er′ for all r′ ∈ Path(r, c′′) ∩ (Path(r, c) ∪ Path(r, c′)) does not increase (since if this happens, then er(Y ∪ {x′, z}) > qr holds) and er′ (Y ∪ {x′, z}) ≤ qr′ holds for all r′ ∈ Path(r, c′′) \\ (Path(r, c) ∪ Path(r, c′)). However, er′(Y ∪ {y, z}) = er′(Y ∪ {x′, z}) holds for all r′ ∈ Path(r, c′′) \\ (Path(r, c) ∪ Path(r, c′)). Thus, the outcomes of z under 13 Note that Pre and Preceding(X ′ ∪ {x}, x′) used in the proof of Lemma 2 (as well as Suc and Succeeding(X ′ ∪ {x}, x′)) are different, since the orders of examining contracts are different between PLDA-RQ and RSDA-RQ.M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 53X ′′ and X ′′ ∪ {x′} must be identical. Then, ChC (X ′′ ∪ {x′}) = (ChC (X ′′) ∪ {x′}) \\ {y} holds. Since we have X ′′ ∪ {x′} = X ′ ∪ {x}and ChC (X ′′) ∪ {x′} = ChC (X ′) ∪ {x}, ChC (X ′ ∪ {x}) = (ChC (X ′) ∪ {x}) \\ {y}, i.e., condition (iii) in Deﬁnition 9, holds. \u0002From Lemmas 1 and 4, we can immediately obtain the following theorem.Theorem 10. RSDA-RQ is strategyproof.Also, the following theorem holds.Theorem 11. RSDA-RQ always produces a feasible and fair matching.Proof. Assume that X ′ , which is the matching obtained by RSDA-RQ, is not feasible. By the deﬁnition of the generalized DA mechanism, X ′ is semi-school-feasible. Thus, the only possibility that X ′ is not feasible is that some student s is not assigned to any school. Since X ′ is semi-school-feasible, we can choose a contract x = (s, c) such that X ′ ∪ {x} is semi-school-feasible. Then, it is clear that x ∈ ChS (X ′ ∪ {x}) and x ∈ ChC (X ′ ∪ {x}) hold. This contradicts the fact that X ′ is HM-stable.Assume X ′ is not fair. Then, there exist (s, c) ∈ X \\ X ′, (s, c′), (s′, c) ∈ X ′ , such that c \u0003s c′ and s \u0003c s′ hold. Thus, in the calculation of ChC (X ′ ∪ {(s, c)}), (s, c) is examined before (s′, c). Then, it is clear that (s, c) ∈ ChS(X ′ ∪ {(s, c)}) and (s, c) ∈ ChC (X ′ ∪ {(s, c)}) hold. This contradicts the fact that X ′ is HM-stable. \u0002From the incompatibility of fairness and nonwastefulness, RSDA-RQ is wasteful since it is fair. In Example 4, students s1, s2, and s4 claim an empty seat.Theorem 12. RSDA-RQ is school-equitably-nonwasteful.Proof. By way of contradiction, assume in matching X ′ , which is obtained by RSDA-RQ, there exist (s, c′) ∈ X \\ X ′ , (s, c) ∈ X ′ , such that c′ \u0003s c, X ′ \\ {(s, c)} ∪ {(s, c′)} is feasible, and |X ′c | − |X ′c′ | ≥ 2. Then, it is clear that (s, c′) ∈ ChS (X ′ ∪ {(s, c′)}) holds. Also, let us assume (s′, c) is the contract that has the lowest priority in X ′c according to \u0003c . Then, in the calculation of ChC (X ′ ∪ {(s, c′)}), (s, c′) is examined before (s′, c) since |X ′c| − |X ′c′ | ≥ 2. Also, since (X ′ \\ {(s, c)}) ∪ {(s, c′)} is feasible, (X ′ \\{(s′, c)}) ∪{(s, c′)} is school-feasible. Thus, (s, c′) ∈ ChC (X ′ ∪ {(s, c′)}) holds. This contradicts the fact that X ′ is HM-stable. \u0002Unfortunately, as discussed in Kamada and Kojima [18], Goto et al. [10], fairness and school-equitably-nonwastefulness do not imply HM-stability. Thus, we cannot guarantee that RSDA-RQ obtains the student-optimal fair and school-equitably-nonwasteful matching. In fact, there is a case where the student-optimal fair and school-equitably-nonwasteful matching does not even exist.6. EvaluationThis section evaluates our newly developed mechanisms. We consider a market with n = 512 students and m = 64schools. The individual maximum quota for each school qc is 32. Thus, for most cases, the individual maximum quota will not be a binding constraint. We consider two tree structures: binary tree and octary tree. In a binary tree, each node has two children. Since there are 64 leaf nodes, the height of the tree is six. In an octary tree, each node has eight children. Thus, the height of the tree is two, i.e., schools are divided into eight regions, each of which contains eight schools. Let ardenote pr −∑r′∈children(r) pr′ , i.e., ar is the increased amount of r’s minimum quota compared to the sum of the minimum quotas of its children. Then, the regional minimum quotas are determined so that for each region r except C , ar becomes roughly the same. We set the sum of ar except C , i.e., ∑r∈R\\{C} ar , to 256. Similarly, let br denote ∑r′∈children(r) qr′ − qr , i.e., br is the decreased amount of r’s maximum quota compared to the sum of the maximum quotas of its children. Then, the regional maximum quotas are determined so that for each region r except C , br becomes roughly the same. We set ∑r∈R\\{C} br = 1024.We generate students’ preferences as follows. We draw one common vector uc of the cardinal utilities from set [0, 1]muniformly at random. We then randomly draw private vector us of the cardinal utilities from the same set, again uniformly at random. Next, we construct cardinal utilities over all m schools for student s as αuc + (1 − α)us , for some α ∈ [0, 1]. We then convert these cardinal utilities into an ordinal preference relation for each student. The higher the value of α is, the more correlated the students’ preferences are. School priorities \u0003c are drawn uniformly at random. We create 100 problem instances for each parameter setting.1414 The averages and variances change only slightly when we increase the number of problem instances to 1000. For example, in Fig. 2, when α = 0.8, for 100 problem instances, the average and variance of PLDA-RQ are 0.758 and 0.00104, respectively. On the other hand, for 1000 problem instances, they are 0.760 and 0.00102, respectively.54 M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57Fig. 2. Ratio of claiming students, binary tree, pc = 0. Fig. 3. Ratio of claiming students, octary tree, pc = 0.Fig. 4. CDFs of student welfare, binary tree, α = 0.3, pc = 0. Fig. 5. CDFs of student welfare, octary tree, α = 0.3, pc = 0.Fig. 6. CDFs of student welfare, binary tree, α = 0.6, pc = 0. Fig. 7. CDFs of student welfare, octary tree, α = 0.6, pc = 0.We compare our mechanism to the Artiﬁcial Cap Deferred Acceptance mechanism (ACDA). In the ACDA, we artiﬁcially modify the individual maximum quota of each school so that all regional minimum/maximum quotas can be automatically satisﬁed once these quotas are satisﬁed. The ACDA produces a feasible and fair matching, but it is less ﬂexible than our mechanisms.First, we show the results when the individual minimum quota for each individual school pc is set to 0. Figs. 2 and 3show the ratio of students who claim empty seats for binary/octary trees. The x-axis denotes the value of α, and the y-axis denotes the average ratio of the students who claim empty seats. The result reveals that the ACDA is quite wasteful; most students claim empty seats. The ratio is higher in the binary tree, in which regional quotas are more severe. In terms of eﬃciency, PLDA-RQ outperforms RSDA-RQ.Figs. 4 and 5 illustrate the student welfare by plotting the cumulative distribution functions (CDFs) of the average number of students matched with their k-th or higher ranked school under each mechanism for α = 0.3, and Figs. 6 and 7 show the results where α = 0.6. If the CDF of one mechanism ﬁrst-order stochastically dominates another, then a strong argument can be made for using the stochastically dominant mechanism. PLDA-RQ and RSDA-RQ outperform the ACDA. Setting artiﬁcial caps decreases the welfare of the students, since the ACDA loses too much ﬂexibility. As α increases, the competition among M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 55Fig. 8. Ratio of claiming students, binary tree, pc = 2. Fig. 9. Ratio of claiming students, octary tree, pc = 2.Fig. 10. CDFs of student welfare, binary tree, α = 0.3, pc = 2. Fig. 11. CDFs of student welfare, octary tree, α = 0.3, pc = 2.Fig. 12. CDFs of student welfare, binary tree, α = 0.6, pc = 2. Fig. 13. CDFs of student welfare, octary tree, α = 0.6, pc = 2.students becomes more severe and their welfare decreases. Our experimental results clearly show that our newly developed mechanisms have an advantage over the ACDA in terms of nonwastefulness and student welfare.In terms of eﬃciency, PLDA-RQ is better than RSDA-RQ. Thus, if the welfare of students is important, then PLDA-RQ would be a better choice. RSDA-RQ tries to balance the number of students allocated to each school by sacriﬁcing the eﬃciency compared to PLDA-RQ. Thus, if such a balance is important, then RSDA-RQ would be a better choice.Next, we show the results when the individual minimum quota for each individual school pc is set to 2 in Figs. 8–13. We can see the qualitative trends of these results are very similar to the cases when pc = 0. However, the difference between binary tree cases and octary tree cases becomes smaller. In octary tree cases where pc = 0, we can assign students to schools within a region very ﬂexibly. By setting pc = 2, we lose such ﬂexibility. As a result, the difference between the two different tree structures becomes smaller.Finally, we show the results when schools have different capacities in Figs. 14–19. We assume there are three types of schools: (i) small-scale schools where qc = 8, pc = 0, (ii) medium-scale schools where qc = 16, pc = 1, and (iii) large-scale schools where qc = 32, pc = 2. We set c1 to a small-scale school, c2 to a medium-scale school, c3 to a large-scale school, c4 is a small-scale school, and so on. For each region r except C , pr is set to 1.2 ×∑r′∈children(r) pr′ , and qr is set to 0.9 ×∑r′∈children(r) qr′ . The preferences of students and priorities of schools are generated in the same way as previous experiments. Again, we can see the qualitative trends of these results are very similar to previous experiments. In this 56 M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57Fig. 14. Ratio of claiming students, binary tree, three school types. Fig. 15. Ratio of claiming students, octary tree, three school types.Fig. 16. CDFs of student welfare, binary tree, α = 0.3, three school types.Fig. 17. CDFs of student welfare, octary tree, α = 0.3, three school types.Fig. 18. CDFs of student welfare, binary tree, α = 0.6, three school types.Fig. 19. CDFs of student welfare, octary tree, α = 0.6, three school types.setting, the difference between binary tree cases and octary tree cases is small, since we impose individual minimum quotas for large and medium scale schools.7. ConclusionIn this paper, we analyzed the complexity of ﬁnding a feasible matching for a given matching problem with regional quo-tas. We showed that, when we put no restrictions on the structure of regions, checking the existence of a feasible matching that satisﬁes all quotas is NP-complete. Then, assuming that regions have a hierarchical structure, we developed strate-gyproof matching mechanisms for handling regional minimum/maximum quotas called PLDA-RQ and RSDA-RQ. We proved that these mechanisms are fair but wasteful, while they satisfy conditions that are weaker than nonwastefulness (i.e., PL-wastefulness and school-equitable-nonwastefulness). In particular, PLDA-RQ satisﬁes a stronger fairness requirement called PL-fairness, and it obtains the student-optimal PL-fair and PL-nonwasteful matching. We then conﬁrmed the advantages of these mechanisms compared to the artiﬁcial cap mechanism via simulations.M. Goto et al. / Artiﬁcial Intelligence 235 (2016) 40–57 57AcknowledgementsThis research was partially supported by KAKENHI 24220003, 26870423, and 26280081.References[1] O. Aygün, T. Sönmez, Matching with contracts: comment, Am. Econ. Rev. 103 (2013) 2050–2051.[2] P. Biro, T. Fleiner, R. Irving, D. Manlove, The college admissions problem with lower and common quotas, Theor. Comput. Sci. 411 (2010) 3136–3153.[3] S. Braun, N. Dwenger, D. Kübler, A. Westkamp, Implementing quotas in university admissions: an experimental analysis, Games Econ. Behav. 85 (2014) 232–251.[4] L. Ehlers, I.E. Hafalir, M.B. Yenmez, M.A. Yildirim, School choice with controlled choice constraints: hard bounds versus soft bounds, J. Econ. Theory 153 (2014) 648–683.[5] T. Fleiner, A ﬁxed-point approach to stable matchings and some applications, Math. Oper. Res. 28 (2003) 103–126.[6] T. Fleiner, N. Kamiyama, A matroid approach to stable matchings with lower quotas, in: Proceedings of ACM–SIAM Symposium on Discrete Algorithms (SODA-2012), 2012, pp. 135–142.[7] D. Fragiadakis, A. Iwasaki, P. Troyan, S. Ueda, M. Yokoo, Strategyproof matching with minimum quotas, ACM Trans. Econ. Comput. 4 (2015) 6.[8] D. Gale, L.S. Shapley, College admissions and the stability of marriage, Am. Math. Mon. 69 (1962) 9–15.[9] M. Goto, N. Hashimoto, A. Iwasaki, Y. Kawasaki, S. Ueda, Y. Yasuda, M. Yokoo, Strategy-proof matching with regional minimum quotas, in: Thirteenth International Conference on Autonomous Agents and Multiagent Systems (AAMAS-2014), 2014, pp. 1225–1232.[10] M. Goto, A. Iwasaki, Y. Kawasaki, Y. Yasuda, M. Yokoo, Improving fairness and eﬃciency in matching markets with regional caps: priority-list based deferred acceptance mechanism, Mimeo, 2014, the latest version is available at http://mpra.ub.uni-muenchen.de/53409/.[11] M. Goto, F. Kojima, R. Kurata, A. Tamura, M. Yokoo, Designing matching mechanisms under general distributional constraints, in: Proceed-ings of the Sixteenth ACM Conference on Economics and Computation (EC-2015), 2015, pp. 259–260, the full version is available at http://mpra.ub.uni-muenchen.de/64000/.[12] F. Gul, E. Stacchetti, Walrasian equilibrium with gross substitutes, J. Econ. Theory 87 (1999) 95–124.[13] I.E. Hafalir, M.B. Yenmez, M.A. Yildirim, Effective aﬃrmative action in school choice, Theor. Econ. 8 (2013) 325–363.[14] K. Hamada, K. Iwama, S. Miyazaki, The hospitals/residents problem with lower quotas, Algorithmica (2014) 1–26.[15] J.W. Hatﬁeld, P.R. Milgrom, Matching with contracts, Am. Econ. Rev. 95 (2005) 913–935.[16] C.C. Huang, Classiﬁed stable matching, in: Proceedings of ACM–SIAM Symposium on Discrete Algorithms (SODA-2010), 2010, pp. 1235–1253.[17] Y. Kamada, F. Kojima, General theory of matching under distributional constraints, Mimeo, 2014.[18] Y. Kamada, F. Kojima, Eﬃcient matching under distributional constraints: theory and applications, Am. Econ. Rev. 105 (2015) 67–99.[19] F. Kojima, School choice: impossibilities for aﬃrmative action, Games Econ. Behav. 75 (2012) 685–693.[20] F. Kojima, A. Tamura, M. Yokoo, Designing matching mechanisms under constraints: an approach from discrete convex analysis, in: Pro-ceedings of the Seventh International Symposium on Algorithmic Game Theory (SAGT-2014), 2014, the full version is available at http://mpra.ub.uni-muenchen.de/56189.[21] S.D. Kominers, T. Sönmez, Matching with slot-speciﬁc priorities: theory, Mimeo, 2014.[22] D. Monte, N. Tumennasan, Matching with quorum, Econ. Lett. 120 (2013) 14–17.[23] A.E. Roth, The college admissions problem is not equivalent to the marriage problem, J. Econ. Theory 36 (1985) 277–288.[24] A.E. Roth, M.A.O. Sotomayor, Two-Sided Matching: A Study in Game-Theoretic Modeling and Analysis, Econometric Society Monographs, Cambridge University Press, 1990.[25] T. Sönmez, Bidding for army career specialties: improving the ROTC branching mechanism, J. Polit. Econ. 121 (2013) 186–219.[26] T. Sönmez, T.B. Switzer, Matching with (branch-of-choice) contracts at the United States Military Academy, Econometrica 81 (2013) 451–488.[27] A. Westkamp, An analysis of the German university admissions system, Econ. Theory 53 (2013) 561–589.[28] Y. Yokoi, Matroidal choice functions, Mathematical Engineering Technical Reports 2014-32, 2014, pp. 1–27.",
    "id": 186661822,
    "identifiers": {
        "doi": "10.1016/j.artint.2016.02.002",
        "oai": "oai:uec.repo.nii.ac.jp:00008867"
    },
    "title": "Strategyproof matching with regional minimum and maximum quotas",
    "language": {
        "code": "en",
        "name": "English"
    },
    "publishedDate": "2016-01-01T00:00:00+00:00",
    "publisher": "'Elsevier BV'",
    "references": [],
    "sourceFulltextUrls": [
        "https://uec.repo.nii.ac.jp/?action=repository_action_common_download&item_id=8867&item_no=1&attribute_id=22&file_no=1"
    ],
    "updatedDate": "",
    "yearPublished": "2016",
    "links": [
        {
            "type": "download",
            "url": "https://core.ac.uk/download/186661822.pdf"
        },
        {
            "type": "reader",
            "url": "https://core.ac.uk/reader/186661822"
        },
        {
            "type": "thumbnail_m",
            "url": "https://core.ac.uk/image/186661822/medium"
        },
        {
            "type": "thumbnail_l",
            "url": "https://core.ac.uk/image/186661822/large"
        },
        {
            "type": "display",
            "url": "https://core.ac.uk/outputs/186661822"
        }
    ],
    "abstract": "This paper considers matching problems with individual/regional minimum/maximum quotas. Although such quotas are relevant in many real-world settings, there is a lack of strategyproof mechanisms that take such quotas into account. We first show that without any restrictions on the regional structure, checking the existence of a feasible matching that satisfies all quotas is NP-complete. Then, assuming that regions have a hierarchical structure (i.e., a tree), we show that checking the existence of a feasible matching can be done in time linear in the number of regions. We develop two strategyproof matching mechanisms based on the Deferred Acceptance mechanism (DA), which we call Priority List based Deferred Acceptance with Regional minimum and maximum Quotas (PLDA-RQ) and Round-robin Selection Deferred Acceptance with Regional minimum and maximum Quotas (RSDA-RQ). When regional quotas are imposed, a stable matching may no longer exist since fairness and nonwastefulness, which compose stability, are incompatible. We show that both mechanisms are fair. As a result, they are inevitably wasteful. We show that the two mechanisms satisfy different versions of nonwastefulness respectively; each is weaker than the original nonwastefulness. Moreover, we compare our mechanisms with an artificial cap mechanism via simulation experiments, which illustrate that they have a clear advantage in terms of nonwastefulness and student welfare",
    "tags": [
        "Journal Article",
        "Two-sided matching",
        "Many-to-one-matching",
        "Market design",
        "Matching with contracts",
        "Matching with constraints",
        "Strategyproofness",
        "Deferred acceptance"
    ],
    "fulltextStatus": "enabled",
    "subjects": [
        "Journal Article"
    ],
    "oai": "oai:uec.repo.nii.ac.jp:00008867",
    "deleted": "ALLOWED",
    "disabled": false,
    "journals": null,
    "repositories": {
        "id": "2508",
        "openDoarId": 0,
        "name": "Creative Repository of Electro-Communications",
        "urlHomepage": null,
        "uriJournals": null,
        "physicalName": "noname",
        "roarId": 0,
        "baseId": 0,
        "pdfStatus": null,
        "nrUpdates": 0,
        "lastUpdateTime": null
    },
    "repositoryDocument": {
        "id": 186661822,
        "depositedDate": null,
        "publishedDate": "2016-01-01T00:00:00+00:00",
        "updatedDate": "2023-04-18T05:15:21+01:00",
        "acceptedDate": null,
        "createdDate": "2019-02-15T22:57:11+00:00"
    },
    "urls": [
        "http://id.nii.ac.jp/1438/00008835/",
        "https://doi.org/10.1016/j.artint.2016.02.002",
        "https://uec.repo.nii.ac.jp/?action=repository_uri&item_id=8867",
        "https://uec.repo.nii.ac.jp/?action=repository_action_common_download&item_id=8867&item_no=1&attribute_id=22&file_no=1"
    ],
    "lastUpdate": "2023-04-18T05:15:21+01:00",
    "setSpecs": []
}